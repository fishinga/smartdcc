<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.base.dao.TSRoleUserDao">
	<resultMap id="TSRoleUser" type="com.attiot.railAnaly.base.entity.TSRoleUser">
		<id property="id" column="ID" javaType="String" jdbcType="VARCHAR"/>
		<result property="roleid" column="roleid" javaType="String" jdbcType="VARCHAR"/>
		<result property="userid" column="userid" javaType="String" jdbcType="VARCHAR"/>

	</resultMap>
	
	<insert id="insert" parameterType="com.attiot.railAnaly.base.entity.TSRoleUser">
		INSERT INTO t_s_role_user
		(
			<include refid="column" />
		) VALUES (
			#{id},
			#{roleid,jdbcType=VARCHAR},
			#{userid,jdbcType=VARCHAR}
		)
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			SELECT REPLACE(UUID(),'-','')
		</selectKey>
	</insert>

	<update id="update" parameterType="com.attiot.railAnaly.base.entity.TSRoleUser">
		UPDATE t_s_role_user
		SET
			`roleid` = #{roleid},
			`userid` = #{userid}
		WHERE ID = #{id}
	</update>

	<delete id="delete" parameterType="String">
		DELETE FROM t_s_role_user WHERE ID = #{id}
	</delete>
	
	<delete id="deleteRoleUser" parameterType="String">
		DELETE FROM t_s_role_user WHERE userid = #{id}
	</delete>

	<select id="getById" parameterType="String" resultMap="TSRoleUser">
		SELECT
			ID,
			<include refid="column" />
		FROM t_s_role_user
		<where>
			ID = #{id}
		</where>
	</select>

	<select id="getByParam" parameterType="com.attiot.railAnaly.base.param.TSRoleUserQueryParam" resultMap="TSRoleUser">
		SELECT ID,
		<include refid="column" />
		FROM t_s_role_user
		<include refid="where" />
		LIMIT 1
	</select>

	<select id="query" parameterType="com.attiot.railAnaly.base.param.TSRoleUserQueryParam"	resultMap="TSRoleUser">
		SELECT
			ID,
			<include refid="column" />
		FROM t_s_role_user
		<include refid="where" />
		<include refid="basic" />
	</select>

	<select id="queryCount" parameterType="com.attiot.railAnaly.base.param.TSRoleUserQueryParam" resultType="Long">
		SELECT COUNT(0)
		FROM t_s_role_user
		<include refid="where" />
	</select>

	<sql id="column">
		`id`,
		`roleid`,
		`userid`
	</sql>

	<sql id="columnTable">
		t_s_role_user.`roleid`,
		t_s_role_user.`userid`
	</sql>

	<sql id="where">
		<where>
			<if test="id != null"> AND ID = #{id}</if>
			<if test="roleid != null"> AND roleid = #{roleid}</if>
			<if test="userid != null"> AND userid = #{userid}</if>
		</where>
	</sql>

	<sql id="basic">
		<if test="column != null">ORDER BY #{column} #{sort}</if>
		<if test="pageNo != -1">LIMIT #{startIndex}, #{pageSize}</if>
		<if test="pageNo == -1 and limit != -1">LIMIT #{limit}</if>
		<if test="lock">
			<if test="lockMode == 0">FOR UPDATE</if>
			<if test="lockMode == 1">LOCK IN SHARE MODE</if>
		</if>
	</sql>
</mapper>
