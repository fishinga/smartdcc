<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.borrow.dao.ABorrowListDetailDao">
    <resultMap id="ABorrowListDetail" type="com.attiot.railAnaly.borrow.entity.ABorrowListDetail">
        <id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
        <result property="borrowListId" column="borrow_list_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="code" column="code" javaType="String" jdbcType="VARCHAR"/>
        <result property="unit" column="unit" javaType="String" jdbcType="VARCHAR"/>
        <result property="borrowGoodsId" column="borrow_goods_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="borrowGoodsName" column="borrow_goods_name" javaType="String" jdbcType="VARCHAR"/>
        <result property="borrowGoodsCategory" column="borrow_goods_category" javaType="String" jdbcType="VARCHAR"/>
        <result property="categoryName" column="category_name" javaType="String" jdbcType="VARCHAR"/>
        <result property="returnType" column="return_type" javaType="String" jdbcType="VARCHAR"/>
        <result property="restituer" column="restituer" javaType="String" jdbcType="VARCHAR"/>
        <result property="returnTime" column="return_time" javaType="String" jdbcType="TIMESTAMP"/>
        <result property="returnNum" column="return_num" javaType="String" jdbcType="VARCHAR"/>
        <result property="attachId" column="attach_id" javaType="String" jdbcType="VARCHAR"/>
    </resultMap>
    <insert id="insert" parameterType="com.attiot.railAnaly.borrow.entity.ABorrowListDetail">
        INSERT INTO a_borrow_list_detail
        (
        id,
        <include refid="column"/>)
        VALUES (
        #{id,jdbcType=VARCHAR},
        #{borrowListId,jdbcType=VARCHAR},
        #{code,jdbcType=VARCHAR},
        #{unit,jdbcType=VARCHAR},
        #{borrowGoodsId,jdbcType=VARCHAR},
        #{borrowGoodsName,jdbcType=VARCHAR},
        #{borrowGoodsCategory,jdbcType=VARCHAR},
        #{categoryName,jdbcType=VARCHAR},
        #{returnType,jdbcType=VARCHAR},
        #{restituer,jdbcType=VARCHAR},
        #{returnTime,jdbcType=TIMESTAMP},
        #{returnNum,jdbcType=VARCHAR},
        #{attachId,jdbcType=VARCHAR}
        )
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
            SELECT REPLACE(UUID(),'-','')
        </selectKey>
    </insert>

    <update id="update" parameterType="com.attiot.railAnaly.borrow.entity.ABorrowListDetail">
        UPDATE a_borrow_list_detail
        SET
        `borrow_list_id` = #{borrowListId},
        `code` = #{code},
        `unit` = #{unit},
        `borrow_goods_id` = #{borrowGoodsId},
        `borrow_goods_name` = #{borrowGoodsName},
        `borrow_goods_category` = #{borrowGoodsCategory},
        `category_name` = #{categoryName},
        `return_type` = #{returnType},
        `restituer` = #{restituer},
        `return_time` = #{returnTime},
        `return_num` = #{returnNum},
        `attach_id` = #{attachId}
        WHERE ID = #{id}
    </update>

    <select id="query" parameterType="com.attiot.railAnaly.borrow.param.ABorrowListDetailQueryParam" resultMap="ABorrowListDetail">
        SELECT ID,
        <include refid="column"/>
        FROM a_borrow_list_detail
        <include refid="where"/>
        <include refid="basic"/>
    </select>


    <select id="getByParam" parameterType="com.attiot.railAnaly.borrow.param.ABorrowListDetailQueryParam" resultMap="ABorrowListDetail">
        SELECT ID,
        <include refid="column"/>
        FROM a_borrow_list_detail
        <include refid="where"/>
        LIMIT 1
    </select>


    <select id="getById" parameterType="Integer"  resultMap="ABorrowListDetail">
        SELECT ID,
        <include refid="column"/>
        FROM a_borrow_list_detail
        <where>
            ID = #{id}
        </where>
    </select>




    <select id="queryCount" parameterType="com.attiot.railAnaly.borrow.param.ABorrowListDetailQueryParam" resultType="Long">
        SELECT COUNT(0)
        FROM a_borrow_list_detail
        <include refid="where"/>
    </select>

    <select id="getBorrowReturnCount" parameterType="java.util.HashMap"  resultType="Long">
       SELECT
            count(1)
        FROM
        a_borrow_list b
        LEFT JOIN a_borrow_list_detail det ON det.borrow_list_id = b.id
        WHERE
        det.return_type = '1'
        and  b.borrower = #{borrower}
    </select>

    <!--  ********* 根据借用单查询借用明细  begin ********  -->
    <select id="getByBorrowId" resultMap="ABorrowListDetail">
        SELECT *
        FROM a_borrow_list_detail
        where borrow_list_id in
        <foreach collection="array" item="borrowId" index="index"
                 open="(" close=")" separator=",">
            #{borrowId}
        </foreach>
    </select>
    <!--  ********* 根据借用单查询借用明细  end   ********  -->

    <!-- 根据请点ID 查询借用详情 begin  -->
    <select id="getBorrowByPointId" parameterType="String"  resultMap="ABorrowListDetail">
        SELECT
        *
        FROM
        a_borrow_list_detail de
        WHERE
        de.borrow_list_id IN (
            SELECT
            list.id
            FROM
            a_borrow_list list
            WHERE
            list.ppoint_id = #{pointId}
        )

    </select>
    <!-- 根据请点ID 查询借用详情 end  -->
    <select id="getNeedGivebackBorrowDetailByPointId" parameterType="String"  resultMap="ABorrowListDetail">
        SELECT
        *
        FROM
        a_borrow_list_detail de
        WHERE
        de.borrow_list_id IN (
        SELECT
        list.id
        FROM
        a_borrow_list list
        WHERE
        list.ppoint_id = #{pointId}
        and list.borrow_state = 4
        )
        and de.return_type = 1
    </select>

    <!--  需要归还的借用物品  begin  -->
    <select id="getBorrowReturn" parameterType="java.util.HashMap"  resultType="Map">
        SELECT
            det.id as id,
            det.`borrow_list_id` as  borrowListId,
            det.`code` as code,
            det.`unit` as unit ,
            det.`borrow_goods_id` as borrowGoodsId,
            det.`borrow_goods_name` as borrowGoodsName,
            det.`borrow_goods_category` as borrowGoodsCategory,
            det.`category_name` as categoryName,
            det.`return_type` as returnType,
            det.`restituer` as restituer,
            det.`return_time` as returnTime,
            det.`return_num` as returnNum,
            det.`attach_id` as attachId,
            (
                SELECT
                    count(1)
                FROM
                    a_point_list_goods lg
                WHERE
                    lg.goods_id = det.borrow_goods_id
            ) AS pointFlag,
            (
                SELECT
                    count(1)
                FROM
                    a_workflow_data wd
                WHERE
                    wd.source_id = b.id
                AND wd.process_code = '2010'
                AND wd.run_state = '1'
            ) AS auditFlag
        FROM
        a_borrow_list b
        LEFT JOIN a_borrow_list_detail det ON det.borrow_list_id = b.id
        WHERE
        det.return_type = '1'
        and  b.borrower = #{borrower}
    </select>
    <!--  需要归还的借用物品  end   and b.borrow_state in (3,4)  -->


    <!--  ********* 根据商品ID查询借用明细  begin ********  -->
    <select id="getWorkflowDataByGoodIds" resultMap="ABorrowListDetail">
        SELECT *
        FROM a_borrow_list_detail
        where borrow_goods_id in
        <foreach collection="array" item="goodIds" index="index"
                 open="(" close=")" separator=",">
            #{goodIds}
        </foreach>
        and return_type = '1'
    </select>
    <!--  ********* 根据借用单查询借用明细  end   ********  -->


    <!--  ********* 根据借用单号查询  begin ********  -->
    <select id="getByReturnNum" resultMap="ABorrowListDetail">
        SELECT *
        FROM a_borrow_list_detail
        where return_num = #{returnNum}
    </select>
    <!--  ********* 根据借用单号查询  end   ********  -->

    <!--  ********* 根据商品ID查询借用明细  begin ********  -->
    <select id="getByGoodId" resultMap="ABorrowListDetail">
        SELECT *
        FROM a_borrow_list_detail
        where borrow_goods_id in
        <foreach collection="array" item="goodIds" index="index"
                 open="(" close=")" separator=",">
            #{goodIds}
        </foreach>
        and return_type = '1'
    </select>
    <!--  ********* 根据借用单查询借用明细  end   ********  -->



    <delete id="delete" parameterType="String">
        DELETE FROM a_borrow_list_detail WHERE ID = #{id}
    </delete>

    <sql id="column">
        `borrow_list_id`,
        `code`,
        `unit`,
        `borrow_goods_id`,
        `borrow_goods_name`,
        `borrow_goods_category`,
        `category_name`,
        `return_type`,
        `restituer`,
        `return_time`,
        `return_num`,
        `attach_id`
    </sql>

    <sql id="columnTable">
        a_borrow_list_detail.`borrow_list_id`,
        a_borrow_list_detail.`code`,
        a_borrow_list_detail.`unit`,
        a_borrow_list_detail.`borrow_goods_id`,
        a_borrow_list_detail.`borrow_goods_name`,
        a_borrow_list_detail.`borrow_goods_category`,
        a_borrow_list_detail.`category_name`,
        a_borrow_list_detail.`return_type`,
        a_borrow_list_detail.`restituer`,
        a_borrow_list_detail.`return_time`,
        a_borrow_list_detail.`return_num`,
        a_borrow_list_detail.`attach_id`
    </sql>

    <sql id="where">
        <where>
            <if test="id != null"> AND id = #{id}</if>
            <if test="borrowListId != null"> AND borrow_list_id = #{borrowListId}</if>
            <if test="code != null"> AND code = #{code}</if>
            <if test="unit != null"> AND unit = #{unit}</if>
            <if test="borrowGoodsId != null"> AND borrow_goods_id = #{borrowGoodsId}</if>
            <if test="borrowGoodsName != null"> AND borrow_goods_name = #{borrowGoodsName}</if>
            <if test="borrowGoodsCategory != null"> AND borrow_goods_category = #{borrowGoodsCategory}</if>
            <if test="categoryName != null"> AND category_name = #{categoryName}</if>
        </where>
    </sql>

    <sql id="basic">
        <if test="column != null">
            ORDER BY #{column} #{sort}
        </if>
        <if test="pageNo != -1">
            LIMIT #{startIndex},#{pageSize}
        </if>
        <if test="pageNo == -1 and limit != -1">
            LIMIT #{limit}
        </if>
        <if test="lock">
            <if test="lockMode == 0">
                FOR UPDATE
            </if>
            <if test="lockMode == 1">
                LOCK IN SHARE MODE
            </if>
        </if>
    </sql>
</mapper>
