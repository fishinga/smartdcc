<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.borrow.dao.ABorrowListDao">
    <resultMap id="ABorrowList" type="com.attiot.railAnaly.borrow.entity.ABorrowList">
        <id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
        <result property="ppointId" column="ppoint_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="creator" column="creator" javaType="String" jdbcType="VARCHAR"/>
        <result property="createtime" column="createtime" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="modifor" column="modifor" javaType="String" jdbcType="VARCHAR"/>
        <result property="modifytime" column="modifytime" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="borrowState" column="borrow_state" javaType="Integer" jdbcType="INTEGER"/>
        <result property="borrowNum" column="borrow_num" javaType="Integer" jdbcType="INTEGER"/>
        <result property="borrower" column="borrower" javaType="String" jdbcType="VARCHAR"/>
        <result property="borrowTime" column="borrow_time" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="remark" column="remark" javaType="String" jdbcType="VARCHAR"/>
        <result property="jobContent" column="job_content" javaType="String" jdbcType="VARCHAR"/>
        <result property="creatorOrg" column="creator_org" javaType="String" jdbcType="VARCHAR"/>
        <result property="dispatcher" column="dispatcher" javaType="String" jdbcType="VARCHAR"/>
        <result property="dispatchTime" column="dispatch_time" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="returnNum" column="return_num" javaType="Integer" jdbcType="INTEGER"/>
        <result property="type" column="type" javaType="Integer" jdbcType="INTEGER"/>
        <result property="phone" column="phone" javaType="String" jdbcType="VARCHAR"/>
        <result property="code" column="code" javaType="String" jdbcType="VARCHAR"/>
    </resultMap>
    <insert id="insert" parameterType="com.attiot.railAnaly.borrow.entity.ABorrowList">
        INSERT INTO a_borrow_list
        (
        id,
        <include refid="column"/>)
        VALUES (
        #{id,jdbcType=VARCHAR},
        #{ppointId,jdbcType=VARCHAR},
        #{creator,jdbcType=VARCHAR},
        #{createtime,jdbcType=TIMESTAMP},
        #{modifor,jdbcType=VARCHAR},
        #{modifytime,jdbcType=TIMESTAMP},
        #{borrowState,jdbcType=INTEGER},
        #{borrowNum,jdbcType=INTEGER},
        #{borrower,jdbcType=VARCHAR},
        #{borrowTime,jdbcType=TIMESTAMP},
        #{remark,jdbcType=VARCHAR},
        #{jobContent,jdbcType=VARCHAR},
        #{creatorOrg,jdbcType=VARCHAR},
        #{dispatcher,jdbcType=VARCHAR},
        #{dispatchTime,jdbcType=TIMESTAMP},
        #{returnNum,jdbcType=INTEGER},
        #{type,jdbcType=INTEGER},
        #{phone,jdbcType=VARCHAR},
        #{code,jdbcType=VARCHAR}
        )
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
            SELECT REPLACE(UUID(),'-','')
        </selectKey>
    </insert>

    <update id="update" parameterType="com.attiot.railAnaly.borrow.entity.ABorrowList">
        UPDATE a_borrow_list
        SET
        `ppoint_id` = #{ppointId},
        `creator` = #{creator},
        `createtime` = #{createtime},
        `modifor` = #{modifor},
        `modifytime` = #{modifytime},
        `borrow_state` = #{borrowState},
        `borrow_num` = #{borrowNum},
        `borrower` = #{borrower},
        `borrow_time` = #{borrowTime},
        `remark` = #{remark},
        `job_content` = #{jobContent},
        `creator_org` = #{creatorOrg},
        `dispatcher` = #{dispatcher},
        `dispatch_time` = #{dispatchTime},
        `return_num` = #{returnNum},
        `type` = #{type},
        `phone` = #{phone},
        `code` = #{code}
        WHERE ID = #{id}
    </update>

    <select id="query" parameterType="com.attiot.railAnaly.borrow.param.ABorrowListQueryParam" resultMap="ABorrowList">
        SELECT ID,
        <include refid="column"/>
        FROM a_borrow_list
        <include refid="where"/>
        <include refid="basic"/>
    </select>


    <select id="getByParam" parameterType="com.attiot.railAnaly.borrow.param.ABorrowListQueryParam" resultMap="ABorrowList">
        SELECT ID,
        <include refid="column"/>
        FROM a_borrow_list
        <include refid="where"/>
        LIMIT 1
    </select>


    <select id="getById" parameterType="String"  resultMap="ABorrowList">
        SELECT ID,
        <include refid="column"/>
        FROM a_borrow_list
        <where>
            ID = #{id}
        </where>
    </select>


    <!-- *********** 根据请点ID查询  begin   -->
    <select id="getByPointId" parameterType="String"  resultMap="ABorrowList">
        SELECT ID,
        <include refid="column"/>
        FROM a_borrow_list
        <where>
            ppoint_id = #{pointId}
        </where>
    </select>
    <!-- *********** 根据请点ID查询  end   -->


    <select id="queryCount" parameterType="com.attiot.railAnaly.borrow.param.ABorrowListQueryParam" resultType="Long">
        SELECT COUNT(0)
        FROM a_borrow_list
        <include refid="where"/>
    </select>

    <delete id="delete" parameterType="Integer">
        DELETE FROM a_borrow_list WHERE ID = #{id}
    </delete>

    <!--- 我的借用（借用历史）查询  begin -->
    <select id="getBorrowHis" parameterType="java.util.HashMap"  resultType="java.util.HashMap">
        SELECT
            det.id,
            det.borrow_list_id,
            det.borrow_goods_id,
            det.borrow_goods_name,
            det.`code`,
            b.borrow_state
        FROM
            a_borrow_list b
        LEFT JOIN a_borrow_list_detail det ON det.borrow_list_id = b.id
        WHERE b.borrow_state > 0
        and b.borrower = #{borrower}
    </select>
    <!--- 我的借用（借用历史）查询  end  -->

    <sql id="column">
        `ppoint_id`,
        `creator`,
        `createtime`,
        `modifor`,
        `modifytime`,
        `borrow_state`,
        `borrow_num`,
        `borrower`,
        `borrow_time`,
        `remark`,
        `job_content`,
        `creator_org`,
        `dispatcher`,
        `dispatch_time`,
        `return_num`,
        `type`,
        `phone`,
        `code`
    </sql>

    <sql id="columnTable">
        a_borrow_list.`ppoint_id`,
        a_borrow_list.`creator`,
        a_borrow_list.`createtime`,
        a_borrow_list.`modifor`,
        a_borrow_list.`modifytime`,
        a_borrow_list.`borrow_state`,
        a_borrow_list.`borrow_num`,
        a_borrow_list.`borrower`,
        a_borrow_list.`borrow_time`,
        a_borrow_list.`remark`,
        a_borrow_list.`job_content`,
        a_borrow_list.`creator_org`,
        a_borrow_list.`dispatcher`,
        a_borrow_list.`dispatch_time`,
        a_borrow_list.`return_num`,
        a_borrow_list.`type`,
        a_borrow_list.`phone`,
        a_borrow_list.`code`
    </sql>

    <sql id="where">
        <where>
            <if test="id != null"> AND id = #{id}</if>
            <if test="ppointId != null"> AND ppoint_id = #{ppointId}</if>
            <if test="creator != null"> AND creator = #{creator}</if>
            <if test="createtime != null"> AND createtime = #{createtime}</if>
            <if test="modifor != null"> AND modifor = #{modifor}</if>
            <if test="modifytime != null"> AND modifytime = #{modifytime}</if>
            <if test="borrowState != null"> AND borrow_state = #{borrowState}</if>
            <if test="borrowNum != null"> AND borrow_num = #{borrowNum}</if>
            <if test="borrower != null"> AND borrower = #{borrower}</if>
            <if test="borrowTime != null"> AND borrow_time = #{borrowTime}</if>
            <if test="remark != null"> AND remark = #{remark}</if>
            <if test="jobContent != null"> AND job_content = #{jobContent}</if>
            <if test="creatorOrg != null"> AND creator_org = #{creatorOrg}</if>
            <if test="dispatcher != null"> AND dispatcher = #{dispatcher}</if>
            <if test="dispatchTime != null"> AND dispatch_time = #{dispatchTime}</if>
        </where>
    </sql>

    <sql id="basic">
        <if test="column != null">
            ORDER BY #{column} #{sort}
        </if>
        <if test="pageNo != -1">
            LIMIT #{startIndex},#{pageSize}
        </if>
        <if test="pageNo == -1 and limit != -1">
            LIMIT #{limit}
        </if>
        <if test="lock">
            <if test="lockMode == 0">
                FOR UPDATE
            </if>
            <if test="lockMode == 1">
                LOCK IN SHARE MODE
            </if>
        </if>
    </sql>
</mapper>
