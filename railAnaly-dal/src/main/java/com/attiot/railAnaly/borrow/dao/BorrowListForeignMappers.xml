<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.borrow.dao.BorrowListForeignDao">
	<resultMap id="BorrowListForeign" type="com.attiot.railAnaly.borrow.entity.BorrowListForeign">
		<id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
		<result property="creator" column="creator" javaType="String" jdbcType="VARCHAR"/>
		<result property="createtime" column="createtime" javaType="Date" jdbcType="TIMESTAMP"/>
		<result property="modifor" column="modifor" javaType="String" jdbcType="VARCHAR"/>
		<result property="modifytime" column="modifytime" javaType="Date" jdbcType="TIMESTAMP"/>
		<result property="borrowState" column="borrow_state" javaType="Integer" jdbcType="INTEGER"/>
		<result property="borrowNum" column="borrow_num" javaType="Integer" jdbcType="INTEGER"/>
		<result property="borrower" column="borrower" javaType="String" jdbcType="VARCHAR"/>
		<result property="borrowTime" column="borrow_time" javaType="Date" jdbcType="TIMESTAMP"/>
		<result property="remark" column="remark" javaType="String" jdbcType="VARCHAR"/>
		<result property="dispatcher" column="dispatcher" javaType="String" jdbcType="VARCHAR"/>
		<result property="dispatchTime" column="dispatch_time" javaType="Date" jdbcType="TIMESTAMP"/>
		<result property="returnNum" column="return_num" javaType="Integer" jdbcType="INTEGER"/>
		<result property="phone" column="phone" javaType="String" jdbcType="VARCHAR"/>
		<result property="code" column="code" javaType="String" jdbcType="VARCHAR"/>

	</resultMap>
	
	<insert id="insert" parameterType="com.attiot.railAnaly.borrow.entity.BorrowListForeign">
		INSERT INTO a_borrow_list_foreign
		(
			id,
			<include refid="column" />
		) VALUES (
			#{id,jdbcType=VARCHAR},
			#{creator,jdbcType=VARCHAR},
			#{createtime,jdbcType=TIMESTAMP},
			#{modifor,jdbcType=VARCHAR},
			#{modifytime,jdbcType=TIMESTAMP},
			#{borrowState,jdbcType=INTEGER},
			#{borrowNum,jdbcType=INTEGER},
			#{borrower,jdbcType=VARCHAR},
			#{borrowTime,jdbcType=TIMESTAMP},
			#{remark,jdbcType=VARCHAR},
			#{dispatcher,jdbcType=VARCHAR},
			#{dispatchTime,jdbcType=TIMESTAMP},
			#{returnNum,jdbcType=INTEGER},
			#{phone,jdbcType=VARCHAR},
			#{code,jdbcType=VARCHAR}
		)
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			SELECT REPLACE(UUID(),'-','')
		</selectKey>
	</insert>

	<update id="update" parameterType="com.attiot.railAnaly.borrow.entity.BorrowListForeign">
		UPDATE a_borrow_list_foreign
		SET
			`creator` = #{creator},
			`createtime` = #{createtime},
			`modifor` = #{modifor},
			`modifytime` = #{modifytime},
			`borrow_state` = #{borrowState},
			`borrow_num` = #{borrowNum},
			`borrower` = #{borrower},
			`borrow_time` = #{borrowTime},
			`remark` = #{remark},
			`dispatcher` = #{dispatcher},
			`dispatch_time` = #{dispatchTime},
			`return_num` = #{returnNum},
			`phone` = #{phone},
			`code` = #{code}
		WHERE ID = #{id}
	</update>

	<delete id="delete" parameterType="String">
		DELETE FROM a_borrow_list_foreign WHERE ID = #{id}
	</delete>

	<select id="getById" parameterType="String" resultMap="BorrowListForeign">
		SELECT
			ID,
			<include refid="column" />
		FROM a_borrow_list_foreign
		<where>
			ID = #{id}
		</where>
	</select>

	<select id="getByParam" parameterType="com.attiot.railAnaly.borrow.param.BorrowListForeignQueryParam" resultMap="BorrowListForeign">
		SELECT ID,
		<include refid="column" />
		FROM a_borrow_list_foreign
		<include refid="where" />
		LIMIT 1
	</select>

	<select id="query" parameterType="com.attiot.railAnaly.borrow.param.BorrowListForeignQueryParam"	resultMap="BorrowListForeign">
		SELECT
			ID,
			<include refid="column" />
		FROM a_borrow_list_foreign
		<include refid="where" />
		<include refid="basic" />
	</select>

	<select id="queryCount" parameterType="com.attiot.railAnaly.borrow.param.BorrowListForeignQueryParam" resultType="Long">
		SELECT COUNT(0)
		FROM a_borrow_list_foreign
		<include refid="where" />
	</select>

	<sql id="column">
		`creator`,
		`createtime`,
		`modifor`,
		`modifytime`,
		`borrow_state`,
		`borrow_num`,
		`borrower`,
		`borrow_time`,
		`remark`,
		`dispatcher`,
		`dispatch_time`,
		`return_num`,
		`phone`,
		`code`
	</sql>

	<sql id="columnTable">
		a_borrow_list_foreign.`creator`,
		a_borrow_list_foreign.`createtime`,
		a_borrow_list_foreign.`modifor`,
		a_borrow_list_foreign.`modifytime`,
		a_borrow_list_foreign.`borrow_state`,
		a_borrow_list_foreign.`borrow_num`,
		a_borrow_list_foreign.`borrower`,
		a_borrow_list_foreign.`borrow_time`,
		a_borrow_list_foreign.`remark`,
		a_borrow_list_foreign.`dispatcher`,
		a_borrow_list_foreign.`dispatch_time`,
		a_borrow_list_foreign.`return_num`,
		a_borrow_list_foreign.`phone`,
		a_borrow_list_foreign.`code`
	</sql>

	<sql id="where">
		<where>
			<if test="id != null"> AND id = #{id}</if>
			<if test="creator != null"> AND creator = #{creator}</if>
			<if test="createtime != null"> AND createtime = #{createtime}</if>
			<if test="modifor != null"> AND modifor = #{modifor}</if>
			<if test="modifytime != null"> AND modifytime = #{modifytime}</if>
			<if test="borrowState != null"> AND borrow_state = #{borrowState}</if>
			<if test="borrowNum != null"> AND borrow_num = #{borrowNum}</if>
			<if test="borrower != null"> AND borrower = #{borrower}</if>
			<if test="borrowTime != null"> AND borrow_time = #{borrowTime}</if>
			<if test="remark != null"> AND remark = #{remark}</if>
			<if test="dispatcher != null"> AND dispatcher = #{dispatcher}</if>
			<if test="dispatchTime != null"> AND dispatch_time = #{dispatchTime}</if>
			<if test="returnNum != null"> AND return_num = #{returnNum}</if>
			<if test="phone != null"> AND phone = #{phone}</if>
			<if test="code != null"> AND code = #{code}</if>
		</where>
	</sql>

	<sql id="basic">
		<if test="column != null">ORDER BY #{column} #{sort}</if>
		<if test="pageNo != -1">LIMIT #{startIndex}, #{pageSize}</if>
		<if test="pageNo == -1 and limit != -1">LIMIT #{limit}</if>
		<if test="lock">
			<if test="lockMode == 0">FOR UPDATE</if>
			<if test="lockMode == 1">LOCK IN SHARE MODE</if>
		</if>
	</sql>
</mapper>
