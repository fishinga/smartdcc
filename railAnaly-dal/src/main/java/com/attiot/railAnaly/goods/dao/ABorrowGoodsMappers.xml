<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.goods.dao.ABorrowGoodsDao">
    <resultMap id="ABorrowGoods" type="com.attiot.railAnaly.goods.entity.ABorrowGoods">
        <id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
        <result property="category" column="category" javaType="String" jdbcType="VARCHAR"/>
        <result property="code" column="code" javaType="String" jdbcType="VARCHAR"/>
        <result property="name" column="name" javaType="String" jdbcType="VARCHAR"/>
        <result property="unit" column="unit" javaType="String" jdbcType="VARCHAR"/>
        <result property="state" column="state" javaType="Integer" jdbcType="INTEGER"/>
        <result property="remark" column="remark" javaType="String" jdbcType="VARCHAR"/>
        <result property="creator" column="creator" javaType="String" jdbcType="VARCHAR"/>
        <result property="createtime" column="createtime" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="modifor" column="modifor" javaType="String" jdbcType="VARCHAR"/>
        <result property="modifytime" column="modifytime" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="trainNo" column="train_no" javaType="String" jdbcType="VARCHAR"/>
</resultMap>

    <resultMap id="ABorrowGoods2" type="com.attiot.railAnaly.goods.entity.ABorrowGoods">
        <id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
        <result property="code" column="code" javaType="String" jdbcType="VARCHAR"/>
        <result property="name" column="name" javaType="String" jdbcType="VARCHAR"/>
        <result property="state" column="state" javaType="Integer" jdbcType="INTEGER"/>
        <result property="trainNo" column="train_no" javaType="String" jdbcType="VARCHAR"/>
    </resultMap>


    <select id="query" parameterType="com.attiot.railAnaly.goods.param.ABorrowGoodsQueryParam" resultMap="ABorrowGoods">
        SELECT ID,
        <include refid="column"/>
        FROM a_borrow_goods
        <include refid="where"/>
        <include refid="basic"/>
    </select>

    <select id="queryCount" parameterType="com.attiot.railAnaly.goods.param.ABorrowGoodsQueryParam" resultType="Long">
        SELECT COUNT(0)
        FROM a_borrow_goods
        <include refid="where"/>
    </select>

    <select id="getGoodsCountByUser" parameterType="Map" resultType="Long">

           SELECT count(1)
        FROM
        a_borrow_list b
        LEFT JOIN a_borrow_list_detail det
        ON det.borrow_list_id = b.id
        LEFT JOIN a_point_list_goods lg
        ON det.borrow_goods_id = lg.goods_id
        WHERE
        det.return_type = '1'
        and det.borrow_goods_category IN(select id from a_borrow_category where code like CONCAT(#{category},'%'))
        AND b.borrower = #{userId}
    </select>

    <!--  根据位置ID，查询相关信息-->
    <select id="getByIds" resultMap="ABorrowGoods">
        SELECT ID,
        <include refid="column"/>
        FROM a_borrow_goods
        WHERE  id in
        <foreach collection="array" item="borrowId" index="index"
                 open="(" close=")" separator=",">
            #{borrowId}
        </foreach>
    </select>


    <select id="getById" resultMap="ABorrowGoods">
        SELECT ID,
        <include refid="column"/>
        FROM a_borrow_goods
        WHERE  id = #{id}
    </select>

    <!--  ********* 修改状态  begin ******** -->
    <update id="editState" parameterType="com.attiot.railAnaly.goods.entity.ABorrowGoods">
        UPDATE a_borrow_goods
		SET
			`state` = #{state}
		WHERE ID = #{id}
    </update>
    <!--  ********* 修改状态  end ******** -->


    <update id="updateStateByGoodIds" parameterType="Map">
        UPDATE a_borrow_goods
        SET
        `state` = #{state},
        modifytime=now()
        WHERE find_in_set(ID,#{goodIds})>0
    </update>

    <select id="getGoodsCarNo" parameterType="Map" resultType="Map">
        SELECT DISTINCT
            IFNULL(bg.id, "") id,
            IFNULL(bg.`code`, "") `code`,
            IFNULL(bg.`name`, "") `name`,
            IFNULL(bg.state, "") state,
            IFNULL(lg.train_no, "") trainNo,
            IFNULL( (select realname from t_s_base_user  where lg.creator = id),lg.creator) userName
        FROM
           `a_borrow_goods` bg
        LEFT JOIN a_point_list_goods lg ON bg.id = lg.goods_id
        <where>
            <if test="trainNo != null and trainNo != ''">
                AND lg.train_no = #{trainNo};
            </if>
        </where>
    </select>


    <select id="getContentsCarNo" parameterType="Map" resultType="Map">
        SELECT
            train_no trainNo,
            pl.ppoint_id ppointId,
            IFNULL(ppoint_contents, '') ppointContents,
            IFNULL(start_job, '') StartJob,
            ifnull  ((select realname from t_s_base_user  where pl.ppoint_creator=id),pl.ppoint_creator) ppointCreator,
            ifnull  ((select realname from t_s_base_user  where pl.ppoint_transfer=id),pl.ppoint_transfer) ppointTransfer,
            IFNULL(is_electric, '') isElectric,
            IFNULL(ppoint_duration, '') ppointDuration
        FROM
        `a_point_list` pl
        <where>
            <if test="trainNo != null and trainNo != ''">
                train_no = #{trainNo} AND parent_id IS NOT NULL
            </if>
        </where>
    </select>


    <select id="getGoodsByUser" parameterType="Map" resultType="Map">
        SELECT ifnull(det.`borrow_goods_id`, '') AS id
        , ifnull(det.`code`, '') AS `code`
        , ifnull(det.`borrow_goods_name`, '') AS `name`
        , ifnull(lg.train_no, "") trainNo
        FROM
        a_borrow_list b
        LEFT JOIN a_borrow_list_detail det
        ON det.borrow_list_id = b.id
        LEFT JOIN a_point_list_goods lg
        ON det.borrow_goods_id = lg.goods_id
        WHERE
        det.return_type = '1'
        and det.borrow_goods_category IN(select id from a_borrow_category where code like CONCAT(#{category},'%'))
        AND b.borrower = #{userId}
    </select>

    <sql id="column">
        `category`,
        `code`,
        `name`,
        `unit`,
        `state`,
        `remark`,
        `creator`,
        `createtime`,
        `modifor`,
        `modifytime`
    </sql>

    <sql id="columnTable">
        a_borrow_goods.`category`,
        a_borrow_goods.`code`,
        a_borrow_goods.`name`,
        a_borrow_goods.`unit`,
        a_borrow_goods.`state`,
        a_borrow_goods.`remark`,
        a_borrow_goods.`creator`,
        a_borrow_goods.`createtime`,
        a_borrow_goods.`modifor`,
        a_borrow_goods.`modifytime`
    </sql>

    <sql id="where">
        <where>
            <if test="id != null"> AND id = #{id}</if>
            <if test="category != null"> AND category = #{category}</if>
            <if test="code != null"> AND code = #{code}</if>
            <if test="name != null"> AND name = #{name}</if>
            <if test="unit != null"> AND unit = #{unit}</if>
            <if test="state != null"> AND state = #{state}</if>
            <if test="remark != null"> AND remark = #{remark}</if>
            <if test="creator != null"> AND creator = #{creator}</if>
            <if test="createtime != null"> AND createtime = #{createtime}</if>
            <if test="modifor != null"> AND modifor = #{modifor}</if>
            <if test="modifytime != null"> AND modifytime = #{modifytime}</if>
        </where>
    </sql>

    <sql id="basic">
        <if test="column != null">
            ORDER BY #{column} #{sort}
        </if>
        <if test="pageNo != -1">
            LIMIT #{startIndex},#{pageSize}
        </if>
        <if test="pageNo == -1 and limit != -1">
            LIMIT #{limit}
        </if>
        <if test="lock">
            <if test="lockMode == 0">
                FOR UPDATE
            </if>
            <if test="lockMode == 1">
                LOCK IN SHARE MODE
            </if>
        </if>
    </sql>
</mapper>
