<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.goods.dao.PointListGoodsDao">
	<resultMap id="PointListGoods" type="com.attiot.railAnaly.goods.entity.PointListGoods">
		<id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
		<result property="trainNo" column="train_no" javaType="String" jdbcType="VARCHAR"/>
		<result property="goodsId" column="goods_id" javaType="String" jdbcType="VARCHAR"/>
		<result property="goodsName" column="goods_name" javaType="String" jdbcType="VARCHAR"/>
		<result property="goodsCode" column="goods_code" javaType="String" jdbcType="VARCHAR"/>
		<result property="createTime" column="createtime" javaType="Date" jdbcType="TIMESTAMP"/>
		<result property="creator" column="creator" javaType="String" jdbcType="VARCHAR"/>
		<result property="remarks" column="remarks" javaType="String" jdbcType="VARCHAR"/>
	</resultMap>
	
	<insert id="insert" parameterType="com.attiot.railAnaly.goods.entity.PointListGoods">
		INSERT INTO a_point_list_goods
		(
			id,
			<include refid="column" />
		) VALUES (
			#{id,jdbcType=VARCHAR},
			#{trainNo,jdbcType=VARCHAR},
			#{goodsId,jdbcType=VARCHAR},
			#{goodsName,jdbcType=VARCHAR},
			#{goodsCode,jdbcType=VARCHAR},
			#{createTime,jdbcType=TIMESTAMP},
			#{creator,jdbcType=VARCHAR},
			#{remarks}
		)
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			SELECT REPLACE(UUID(),'-','')
		</selectKey>
	</insert>

	<insert id="batchInsert" parameterType="java.util.List">
		INSERT INTO a_point_list_goods
		(id,<include refid="column"/>)
		values
		<foreach collection="list" item="item" index="index" separator="," >
			(
			md5(uuid()),
			#{item.trainNo,jdbcType=VARCHAR},
			#{item.goodsId,jdbcType=VARCHAR},
			#{item.goodsName,jdbcType=VARCHAR},
			#{item.goodsCode,jdbcType=VARCHAR},
			now(),
			#{item.creator,jdbcType=VARCHAR},
			#{item.remarks}
			)
		</foreach>
	</insert>

	<insert id="batchInsertHis" parameterType="java.util.List">
		INSERT INTO a_point_list_goods_his
		(id,<include refid="column"/>)
		values
		<foreach collection="list" item="item" index="index" separator="," >
			(
			md5(uuid()),
			#{item.trainNo,jdbcType=VARCHAR},
			#{item.goodsId,jdbcType=VARCHAR},
			#{item.goodsName,jdbcType=VARCHAR},
			#{item.goodsCode,jdbcType=VARCHAR},
			now(),
			#{item.creator,jdbcType=VARCHAR},
			#{item.remarks,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>

	<update id="update" parameterType="com.attiot.railAnaly.goods.entity.PointListGoods">
	UPDATE a_point_list_goods
	SET
	`train_no` = #{trainNo},
	`goods_id` = #{goodsId},
	`goods_name` = #{goodsName},
	`goods_code` = #{goodsCode},
	`createtime` = #{createTime},
	`creator` = #{creator}
	WHERE ID = #{id}
</update>

	<delete id="delete" parameterType="String">
		DELETE FROM a_point_list_goods WHERE find_in_set(ID,#{id})>0
	</delete>

	<delete id="deleteGoods" parameterType="String">
		DELETE FROM a_point_list_goods WHERE goods_id = #{goodsId}
	</delete>

	<delete id="batchDeleteByGoodIds" parameterType="String">
		DELETE FROM a_point_list_goods WHERE  find_in_set(goods_id,#{brandIds})>0
	</delete>

	<select id="getById" parameterType="String" resultMap="PointListGoods">
		SELECT
			ID,
			<include refid="column" />
		FROM a_point_list_goods
		<where>
			ID = #{id}
		</where>
	</select>

	<select id="getByCreator" parameterType="String" resultMap="PointListGoods">
		SELECT
		ID,
		<include refid="column" />
		FROM a_point_list_goods
		<where>
			`creator` = #{creator}
		</where>
	</select>




	<select id="getPointListGoodsByTrainNo" parameterType="String" resultMap="PointListGoods">
		SELECT
		ID,
		`train_no`,
		`goods_id`,
		`goods_name`,
		`goods_code`,
		`createtime`,
		IFNULL( (select realname from t_s_base_user  where `creator` = id),`creator`) creator,
		remarks
		FROM a_point_list_goods
		<where>
			find_in_set(train_no,#{trainNo})>0
		</where>
	</select>

	<select id="getByParam" parameterType="com.attiot.railAnaly.goods.param.PointListGoodsQueryParam" resultMap="PointListGoods">
		SELECT ID,
		<include refid="column" />
		FROM a_point_list_goods
		<include refid="where" />
		LIMIT 1
	</select>

	<select id="getByGoodsId" parameterType="String" resultMap="PointListGoods">
		SELECT ID,
		<include refid="column" />
		FROM a_point_list_goods
		WHERE goods_id = #{goodsId}
	</select>

	<select id="getByGoodsIds" parameterType="String" resultMap="PointListGoods">
		SELECT ID,
		<include refid="column" />
		FROM a_point_list_goods
		WHERE find_in_set(goods_id,#{goodsIds})>0
	</select>


	<delete id="deleteByGoodsIds" parameterType="String" >
		delete
		FROM a_point_list_goods
		WHERE find_in_set(goods_id,#{goodsIds})>0
	</delete>

	<select id="query" parameterType="com.attiot.railAnaly.goods.param.PointListGoodsQueryParam"	resultMap="PointListGoods">
		SELECT
			ID,
			<include refid="column" />
		FROM a_point_list_goods
		<include refid="where" />
		<include refid="basic" />
	</select>

	<select id="queryCount" parameterType="com.attiot.railAnaly.goods.param.PointListGoodsQueryParam" resultType="Long">
		SELECT COUNT(0)
		FROM a_point_list_goods
		<include refid="where" />
	</select>

	<sql id="column">
		`train_no`,
		`goods_id`,
		`goods_name`,
		`goods_code`,
		`createtime`,
		`creator`,
		remarks
	</sql>

	<sql id="columnTable">
		a_point_list_goods.`train_no`,
		a_point_list_goods.`goods_id`,
		a_point_list_goods.`goods_name`
	</sql>

	<sql id="where">
		<where>
			<if test="id != null"> AND id = #{id}</if>
			<if test="trainNo != null"> AND train_no = #{trainNo}</if>
			<if test="goodsId != null"> AND goods_id = #{goodsId}</if>
			<if test="goodsName != null"> AND goods_name = #{goodsName}</if>
		</where>
	</sql>

	<sql id="basic">
		<if test="column != null">ORDER BY #{column} #{sort}</if>
		<if test="pageNo != -1">LIMIT #{startIndex}, #{pageSize}</if>
		<if test="pageNo == -1 and limit != -1">LIMIT #{limit}</if>
		<if test="lock">
			<if test="lockMode == 0">FOR UPDATE</if>
			<if test="lockMode == 1">LOCK IN SHARE MODE</if>
		</if>
	</sql>
</mapper>
