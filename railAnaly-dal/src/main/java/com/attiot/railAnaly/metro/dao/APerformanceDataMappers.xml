<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.metro.dao.APerformanceDataDao">
    <resultMap id="APerformanceData" type="com.attiot.railAnaly.metro.entity.APerformanceData">
        <id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
        <result property="userid" column="userid" javaType="String" jdbcType="VARCHAR"/>
        <result property="departId" column="depart_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="positionCode" column="position_code" javaType="String" jdbcType="VARCHAR"/>
        <result property="perfType" column="perf_type" javaType="String" jdbcType="VARCHAR"/>
        <result property="accordingId" column="according_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="accordingName" column="according_name" javaType="String" jdbcType="VARCHAR"/>
        <result property="perfContentsId" column="perf_contents_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="personalScore" column="personal_score" javaType="String" jdbcType="VARCHAR"/>
        <result property="teamScore" column="team_score" javaType="String" jdbcType="VARCHAR"/>
        <result property="yearmonth" column="yearmonth" javaType="String" jdbcType="VARCHAR"/>
        <result property="creator" column="creator" javaType="String" jdbcType="VARCHAR"/>
        <result property="createtime" column="createtime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="modifor" column="modifor" javaType="String" jdbcType="VARCHAR"/>
        <result property="modifytime" column="modifytime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>
    <insert id="insert" parameterType="com.attiot.railAnaly.metro.entity.APerformanceData">
        INSERT INTO a_performance_data
        (id,<include refid="column"/>)
        VALUES (
        md5(uuid()),
        #{userid,jdbcType=VARCHAR},
        #{departId,jdbcType=VARCHAR},
        #{positionCode,jdbcType=VARCHAR},
        #{perfType,jdbcType=VARCHAR},
        #{accordingId,jdbcType=VARCHAR},
        #{accordingName,jdbcType=VARCHAR},
        #{perfContentsId,jdbcType=VARCHAR},
        #{personalScore,jdbcType=VARCHAR},
        #{teamScore,jdbcType=VARCHAR},
        #{yearmonth,jdbcType=VARCHAR},
        #{creator,jdbcType=VARCHAR},
        now(),
        #{modifor,jdbcType=VARCHAR},
        now()
        )

    </insert>

    <update id="update" parameterType="com.attiot.railAnaly.metro.entity.APerformanceData">
        UPDATE a_performance_data
        SET
        `userid` = #{userid},
        `depart_id` = #{departId},
        `position_code` = #{positionCode},
        `perf_type` = #{perfType},
        `according_id` = #{accordingId},
        `according_name` = #{accordingName},
        `perf_contents_id` = #{perfContentsId},
        `personal_score` = #{personalScore},
        `team_score` = #{teamScore},
        `yearmonth` = #{yearmonth},
        `modifor` = #{modifor},
        `modifytime` = now()
        WHERE ID = #{id}
    </update>

    <select id="query" parameterType="com.attiot.railAnaly.metro.param.APerformanceDataQueryParam" resultMap="APerformanceData">
        SELECT t.ID,
        t.`userid`,
        t.`depart_id`,
        t.`position_code`,
        t.`perf_type`,
        t.`according_id`,
        t.`according_name`,
        t.`perf_contents_id`,
        t.`personal_score`,
        t.`team_score`,
        t.`yearmonth`,
        t.`creator`,
        t.`createtime`,
        t.`modifor`,
        t.`modifytime`,
        b.contents as perfContents,
        t.`team_score` as score,
        d.depart_type as departType,
        d.departname as departName,
        u.`name` as userName
        FROM a_performance_data t
        left JOIN  a_performance_contents b on t.perf_contents_id = b.id
        LEFT JOIN t_s_depart d on d.id = t.depart_id
        LEFT JOIN a_metro_user_info u on u.id = t.userid
        <where>
            <if test="id != null"> AND t.id = #{id}</if>
            <if test="userid != null and userid !=''"> AND t.userid = #{userid}</if>
            <if test="departId != null  and departId !=''"> AND t.depart_id = #{departId}</if>
            <if test="positionCode != null"> AND t.position_code = #{positionCode}</if>
            <if test="perfType != null"> AND t.perf_type = #{perfType}</if>
            <if test="accordingId != null"> AND t.according_id = #{accordingId}</if>
            <if test="accordingName != null"> AND t.according_name = #{accordingName}</if>
            <if test="perfContentsId != null"> AND t.perf_contents_id = #{perfContentsId}</if>
            <if test="personalScore != null"> AND t.personal_score = #{personalScore}</if>
            <if test="teamScore != null"> AND t.team_score = #{teamScore}</if>
            <if test="yearmonth != null  and yearmonth !=''"> AND t.yearmonth = #{yearmonth}</if>
            <if test="creator != null"> AND t.creator = #{creator}</if>
            <if test="createtime != null"> AND t.createtime = #{createtime}</if>
            <if test="modifor != null"> AND t.modifor = #{modifor}</if>
            <if test="modifytime != null"> AND t.modifytime = #{modifytime}</if>
            <if test="userName != null and userName !=''"> AND u.name LIKE CONCAT('%',#{userName},'%')</if>
        </where>
        <include refid="basic"/>
    </select>

    <select id="queryTen" parameterType="com.attiot.railAnaly.metro.param.APerformanceDataQueryParam" resultMap="APerformanceData">
        SELECT * FROM
        (
        SELECT
        t.id,
        t.yearmonth,
        t.team_score,
        t.depart_id,
        t.`team_score` as score,
        d.depart_type as departType
        from a_performance_data t
        LEFT JOIN t_s_depart d on d.id = t.depart_id
        where t.perf_type=10
        union all
        SELECT
        t.id,
        t.yearmonth,
        t.team_score,
        b.realname as depart_id,
        t.`team_score` as score,
        e.depart_type as departType
        from a_performance_data t
        LEFT JOIN a_scheduler_depart d on t.depart_id = d.depart_id
        LEFT JOIN t_s_user_org u on d.user_id = u.user_id
        LEFT JOIN t_s_depart e on e.id = u.org_id
        LEFT JOIN t_s_base_user b on b.id = u.user_id
        where t.perf_type=10 and u.org_id is not null
        ) as t
        <include refid="basic"/>
    </select>

    <select id="queryCountTen" parameterType="com.attiot.railAnaly.metro.param.APerformanceDataQueryParam" resultType="Long">
        SELECT COUNT(0)
        FROM
        (
        SELECT
        t.id,
        t.yearmonth,
        t.team_score,
        t.depart_id,
        d.depart_type as departType
        from a_performance_data t
        LEFT JOIN t_s_depart d on d.id = t.depart_id
        where t.perf_type=10
        union all
        SELECT
        t.id,
        t.yearmonth,
        t.team_score,
        b.realname as depart_id,
        e.depart_type as departType
        from a_performance_data t
        LEFT JOIN a_scheduler_depart d on t.depart_id = d.depart_id
        LEFT JOIN t_s_user_org u on d.user_id = u.user_id
        LEFT JOIN t_s_depart e on e.id = u.org_id
        LEFT JOIN t_s_base_user b on b.id = u.user_id
        where t.perf_type=10 and u.org_id is not null
        ) as t
    </select>

    <select id="getByParam" parameterType="com.attiot.railAnaly.metro.param.APerformanceDataQueryParam" resultMap="APerformanceData">
        SELECT ID,
        <include refid="column"/>
        FROM a_performance_data
        <include refid="where"/>
        LIMIT 1
    </select>


    <select id="getById" parameterType="String"  resultMap="APerformanceData">
        SELECT ID,
        <include refid="column"/>
        FROM a_performance_data
        <where>
            ID = #{id}
        </where>
    </select>

    <select id="queryCount" parameterType="com.attiot.railAnaly.metro.param.APerformanceDataQueryParam" resultType="Long">
        SELECT COUNT(0)
        FROM a_performance_data
        <include refid="where"/>
    </select>

    <delete id="delete" parameterType="String">
        DELETE FROM a_performance_data WHERE ID = #{id}
    </delete>

    <sql id="column">
        `userid`,
    `depart_id`,
    `position_code`,
    `perf_type`,
    `according_id`,
    `according_name`,
    `perf_contents_id`,
    `personal_score`,
    `team_score`,
    `yearmonth`,
    `creator`,
    `createtime`,
    `modifor`,
    `modifytime`
    </sql>

    <sql id="columnTable">
        a_performance_data.`userid`,
    a_performance_data.`depart_id`,
    a_performance_data.`position_code`,
    a_performance_data.`perf_type`,
    a_performance_data.`according_id`,
    a_performance_data.`according_name`,
    a_performance_data.`perf_contents_id`,
    a_performance_data.`personal_score`,
    a_performance_data.`team_score`,
    a_performance_data.`yearmonth`,
    a_performance_data.`creator`,
    a_performance_data.`createtime`,
    a_performance_data.`modifor`,
    a_performance_data.`modifytime`
    </sql>

    <sql id="where">
        <where>
            <if test="id != null"> AND id = #{id}</if>
<if test="userid != null"> AND userid = #{userid}</if>
    <if test="departId != null"> AND depart_id = #{departId}</if>
    <if test="positionCode != null"> AND position_code = #{positionCode}</if>
    <if test="perfType != null"> AND perf_type = #{perfType}</if>
    <if test="accordingId != null"> AND according_id = #{accordingId}</if>
    <if test="accordingName != null"> AND according_name = #{accordingName}</if>
    <if test="perfContentsId != null"> AND perf_contents_id = #{perfContentsId}</if>
    <if test="personalScore != null"> AND personal_score = #{personalScore}</if>
    <if test="teamScore != null"> AND team_score = #{teamScore}</if>
    <if test="yearmonth != null"> AND yearmonth = #{yearmonth}</if>
    <if test="creator != null"> AND creator = #{creator}</if>
    <if test="createtime != null"> AND createtime = #{createtime}</if>
    <if test="modifor != null"> AND modifor = #{modifor}</if>
    <if test="modifytime != null"> AND modifytime = #{modifytime}</if>
        </where>
    </sql>

    <sql id="basic">
        <if test="column != null">
            ORDER BY #{column} #{sort}
        </if>
        <if test="pageNo != -1">
            LIMIT #{startIndex},#{pageSize}
        </if>
        <if test="pageNo == -1 and limit != -1">
            LIMIT #{limit}
        </if>
        <if test="lock">
            <if test="lockMode == 0">
                FOR UPDATE
            </if>
            <if test="lockMode == 1">
                LOCK IN SHARE MODE
            </if>
        </if>
    </sql>
</mapper>
