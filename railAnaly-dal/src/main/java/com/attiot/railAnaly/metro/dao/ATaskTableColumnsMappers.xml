<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.metro.dao.ATaskTableColumnsDao">
    <resultMap id="ATaskTableColumns" type="com.attiot.railAnaly.metro.entity.ATaskTableColumns">
        <id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
        <result property="taskTableId" column="task_table_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="parentId" column="parent_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="colSort" column="col_sort" javaType="Integer" jdbcType="INTEGER"/>
        <result property="colCode" column="col_code" javaType="String" jdbcType="VARCHAR"/>
        <result property="colName" column="col_name" javaType="String" jdbcType="VARCHAR"/>
        <result property="colType" column="col_type" javaType="Integer" jdbcType="INTEGER"/>
        <result property="defaultVal" column="default_val" javaType="String" jdbcType="VARCHAR"/>
        <result property="colItems" column="col_Items" javaType="String" jdbcType="VARCHAR"/>
    </resultMap>
    <insert id="insert" parameterType="com.attiot.railAnaly.metro.entity.ATaskTableColumns">
        INSERT INTO a_task_table_columns
        (id,<include refid="column"/>)
        VALUES (
        md5(uuid()),
        #{taskTableId,jdbcType=VARCHAR},
    #{parentId,jdbcType=VARCHAR},
    #{colSort,jdbcType=INTEGER},
    #{colCode,jdbcType=VARCHAR},
    #{colName,jdbcType=VARCHAR},
    #{colType,jdbcType=INTEGER},
    #{defaultVal,jdbcType=VARCHAR},
    #{colItems,jdbcType=VARCHAR}
        )

    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO a_task_table_columns
        (id,<include refid="column"/>)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (
            md5(uuid()),
            #{item.taskTableId,jdbcType=VARCHAR},
            #{item.parentId,jdbcType=VARCHAR},
            #{item.colSort,jdbcType=INTEGER},
            #{item.colCode,jdbcType=VARCHAR},
            #{item.colName,jdbcType=VARCHAR},
            #{item.colType,jdbcType=INTEGER},
            #{item.defaultVal,jdbcType=VARCHAR},
            #{item.colItems,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="com.attiot.railAnaly.metro.entity.ATaskTableColumns">
        UPDATE a_task_table_columns
        SET
        `task_table_id` = #{taskTableId},
    `parent_id` = #{parentId},
    `col_sort` = #{colSort},
    `col_code` = #{colCode},
    `col_name` = #{colName},
    `col_type` = #{colType},
    `default_val` = #{defaultVal},
    `col_Items` = #{colItems}
        WHERE ID = #{id}
    </update>
    <select id="query" parameterType="com.attiot.railAnaly.task.param.TaskTableColumnsQueryParam" resultMap="ATaskTableColumns">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_table_columns
        <where>
            task_table_id = #{taskTableId}
        </where>
        <include refid="basic"/>
    </select>



    <select id="getColumnByTableCode" parameterType="String" resultMap="ATaskTableColumns">
        SELECT a.*
        FROM a_task_table_columns a,a_task_table b
        where b.tablecode = #{tablecode} and b.id = a.task_table_id order by col_sort
    </select>


    <select id="getByParam" parameterType="com.attiot.railAnaly.task.param.TaskTableColumnsQueryParam" resultMap="ATaskTableColumns">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_table_columns
        <include refid="where"/>
        LIMIT 1
    </select>


    <select id="getTableColumnsByTableCode" parameterType="String" resultMap="ATaskTableColumns">
        SELECT t1.*
        FROM a_task_table_columns t1,a_task_table t2
        where t2.tablecode=#{tablecode} and t1.task_table_id = t2.id
        order by t1.col_sort
    </select>


    <select id="getById" parameterType="Integer"  resultMap="ATaskTableColumns">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_table_columns
        <where>
            ID = #{id}
        </where>
    </select>

    <select id="queryCount" parameterType="com.attiot.railAnaly.task.param.TaskTableColumnsQueryParam" resultType="Long">
        SELECT COUNT(0)
        FROM a_task_table_columns
        <include refid="where"/>
    </select>

    <delete id="delete" parameterType="String">
        DELETE FROM a_task_table_columns WHERE ID = #{id}
    </delete>

    <delete id="deleteByTaskTableId" parameterType="String">
        delete from a_task_table_columns where task_table_id =#{taskTableId}
    </delete>



    <sql id="column">
        `task_table_id`,
    `parent_id`,
    `col_sort`,
    `col_code`,
    `col_name`,
    `col_type`,
    `default_val`,
    `col_Items`
    </sql>

    <sql id="columnTable">
        a_task_table_columns.`task_table_id`,
    a_task_table_columns.`parent_id`,
    a_task_table_columns.`col_sort`,
    a_task_table_columns.`col_code`,
    a_task_table_columns.`col_name`,
    a_task_table_columns.`col_type`,
    a_task_table_columns.`default_val`,
    a_task_table_columns.`col_Items`
    </sql>

    <sql id="where">
        <where>
            <if test="id != null"> AND id = #{id}</if>
<if test="taskTableId != null"> AND task_table_id = #{taskTableId}</if>
    <if test="parentId != null"> AND parent_id = #{parentId}</if>
    <if test="colSort != null"> AND col_sort = #{colSort}</if>
    <if test="colCode != null"> AND col_code = #{colCode}</if>
    <if test="colName != null"> AND col_name = #{colName}</if>
    <if test="colType != null"> AND col_type = #{colType}</if>
    <if test="defaultVal != null"> AND default_val = #{defaultVal}</if>
    <if test="colItems != null"> AND col_Items = #{colItems}</if>
        </where>
    </sql>

    <sql id="basic">
        <if test="sordColumn != null">
            ORDER BY #{sordColumn} #{sort}
        </if>
        <if test="pageNo != -1">
            LIMIT #{startIndex},#{pageSize}
        </if>
        <if test="pageNo == -1 and limit != -1">
            LIMIT #{limit}
        </if>
        <if test="lock">
            <if test="lockMode == 0">
                FOR UPDATE
            </if>
            <if test="lockMode == 1">
                LOCK IN SHARE MODE
            </if>
        </if>
    </sql>
</mapper>
