<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.metro.dao.ATaskTableDataDao">
    <resultMap id="ATaskTableData" type="com.attiot.railAnaly.metro.entity.ATaskTableData">
        <id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
        <result property="ppointId" column="ppoint_id" javaType="String" jdbcType="VARCHAR"/>
<result property="taskTableId" column="task_table_id" javaType="String" jdbcType="VARCHAR"/>
<result property="colId" column="col_id" javaType="String" jdbcType="VARCHAR"/>
<result property="colCode" column="col_code" javaType="String" jdbcType="VARCHAR"/>
<result property="colName" column="col_name" javaType="String" jdbcType="VARCHAR"/>
<result property="colValue" column="col_value" javaType="String" jdbcType="VARCHAR"/>
        <result property="creator" column="creator" javaType="String" jdbcType="VARCHAR"/>
        <result property="createtime" column="createtime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="modifor" column="modifor" javaType="String" jdbcType="VARCHAR"/>
        <result property="modifytime" column="modifytime" javaType="java.util.Date" jdbcType="TIMESTAMP"/>

    </resultMap>
    <insert id="insert" parameterType="com.attiot.railAnaly.metro.entity.ATaskTableData">
        INSERT INTO a_task_table_data
        (id,<include refid="column"/>)
        VALUES (
        #{id},
        #{ppointId},
        #{taskTableId,jdbcType=VARCHAR},
    #{colId,jdbcType=VARCHAR},
    #{colCode,jdbcType=VARCHAR},
    #{colName,jdbcType=VARCHAR},
    #{colValue,jdbcType=VARCHAR},
    #{creator,jdbcType=VARCHAR},
    #{createtime,jdbcType=TIMESTAMP},
    #{modifor,jdbcType=VARCHAR},
    #{modifytime,jdbcType=TIMESTAMP}
        )

    </insert>

    <update id="update" parameterType="com.attiot.railAnaly.metro.entity.ATaskTableData">
        UPDATE a_task_table_data
        SET
        ppoint_id  #{ppointId},
        `task_table_id` = #{taskTableId},
    `col_id` = #{colId},
    `col_code` = #{colCode},
    `col_name` = #{colName},
    `col_value` = #{colValue},
    `creator` = #{creator},
    `createtime` = #{createtime},
    `modifor` = #{modifor},
    `modifytime` = #{modifytime}
        WHERE ID = #{id}
    </update>

    <select id="query" parameterType="com.attiot.railAnaly.task.param.TaskTableDataQueryParam" resultMap="ATaskTableData">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_table_data
        <include refid="where"/>
        <include refid="basic"/>
    </select>


    <select id="getByParam" parameterType="com.attiot.railAnaly.task.param.TaskTableDataQueryParam" resultMap="ATaskTableData">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_table_data
        <include refid="where"/>
        LIMIT 1
    </select>


    <select id="getById" parameterType="Integer"  resultMap="ATaskTableData">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_table_data
        <where>
            ID = #{id}
        </where>
    </select>


    <select id="getTableDataByPPointId" parameterType="String"  resultMap="ATaskTableData">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_table_data
        <where>
            ppoint_id = #{ppointId}
        </where>
    </select>

    <select id="queryCount" parameterType="com.attiot.railAnaly.task.param.TaskTableDataQueryParam" resultType="Long">
        SELECT COUNT(0)
        FROM a_task_table_data
        <include refid="where"/>
    </select>

    <delete id="delete" parameterType="String">
        DELETE FROM a_task_table_data WHERE ID = #{id}
    </delete>

    <delete id="deleteByPpointIdAndTableId" parameterType="Map">
        DELETE FROM a_task_table_data WHERE ppoint_id =#{ppointId} and task_table_id = #{taskTableId}
    </delete>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO a_task_table_data
        (id,<include refid="column"/>)
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (
            md5(uuid()),
            #{item.ppointId},
            #{item.taskTableId,jdbcType=VARCHAR},
            #{item.colId,jdbcType=VARCHAR},
            #{item.colCode,jdbcType=VARCHAR},
            #{item.colName,jdbcType=VARCHAR},
            #{item.colValue,jdbcType=VARCHAR},
            #{item.creator,jdbcType=VARCHAR},
            now(),
            #{item.modifor,jdbcType=VARCHAR},
            now()
            )
        </foreach>
    </insert>

    <sql id="column">
ppoint_id,
        `task_table_id`,
    `col_id`,
    `col_code`,
    `col_name`,
    `col_value`,
    `creator`,
    `createtime`,
    `modifor`,
    `modifytime`
    </sql>

    <sql id="columnTable">
        a_task_table_data.`task_table_id`,
    a_task_table_data.`col_id`,
    a_task_table_data.`col_code`,
    a_task_table_data.`col_name`,
    a_task_table_data.`col_value`,
    a_task_table_data.`creator`,
    a_task_table_data.`createtime`,
    a_task_table_data.`modifor`,
    a_task_table_data.`modifytime`
    </sql>

    <sql id="where">
        <where>
            <if test="id != null"> AND id = #{id}</if>
<if test="taskTableId != null"> AND task_table_id = #{taskTableId}</if>
    <if test="colId != null"> AND col_id = #{colId}</if>
    <if test="colCode != null"> AND col_code = #{colCode}</if>
    <if test="colName != null"> AND col_name = #{colName}</if>
    <if test="colValue != null"> AND col_value = #{colValue}</if>
    <if test="creator != null"> AND creator = #{creator}</if>
    <if test="createtime != null"> AND createtime = #{createtime}</if>
    <if test="modifor != null"> AND modifor = #{modifor}</if>
    <if test="modifytime != null"> AND modifytime = #{modifytime}</if>
        </where>
    </sql>

    <sql id="basic">
        <if test="column != null">
            ORDER BY #{column} #{sort}
        </if>
        <if test="pageNo != -1">
            LIMIT #{startIndex},#{pageSize}
        </if>
        <if test="pageNo == -1 and limit != -1">
            LIMIT #{limit}
        </if>
        <if test="lock">
            <if test="lockMode == 0">
                FOR UPDATE
            </if>
            <if test="lockMode == 1">
                LOCK IN SHARE MODE
            </if>
        </if>
    </sql>
</mapper>
