<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.metro.dao.ToolsRelationDao">
	<resultMap id="ToolsRelation" type="com.attiot.railAnaly.metro.entity.ToolsRelation">
		<id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
		<result property="createName" column="create_name" javaType="String" jdbcType="VARCHAR"/>
		<result property="createBy" column="create_by" javaType="String" jdbcType="VARCHAR"/>
		<result property="createDate" column="create_date" javaType="Date" jdbcType="TIMESTAMP"/>
		<result property="updateName" column="update_name" javaType="String" jdbcType="VARCHAR"/>
		<result property="updateBy" column="update_by" javaType="String" jdbcType="VARCHAR"/>
		<result property="updateDate" column="update_date" javaType="Date" jdbcType="TIMESTAMP"/>
		<result property="sysOrgCode" column="sys_org_code" javaType="String" jdbcType="VARCHAR"/>
		<result property="sysCompanyCode" column="sys_company_code" javaType="String" jdbcType="VARCHAR"/>
		<result property="bpmStatus" column="bpm_status" javaType="String" jdbcType="VARCHAR"/>
		<result property="toolsType" column="tools_type" javaType="String" jdbcType="VARCHAR"/>
		<result property="toolsTypeText" column="tools_type_text" javaType="String" jdbcType="VARCHAR"/>
		<result property="storageLocation" column="storage_location" javaType="String" jdbcType="VARCHAR"/>
		<result property="storageLocationText" column="storage_location_text" javaType="String" jdbcType="VARCHAR"/>
		<result property="locationCode" column="location_code" javaType="String" jdbcType="VARCHAR"/>
		<result property="status" column="status" javaType="String" jdbcType="VARCHAR"/>
		<result property="statusText" column="status_text" javaType="String" jdbcType="VARCHAR"/>
		<result property="updateUserid" column="update_userid" javaType="String" jdbcType="VARCHAR"/>


	</resultMap>
	
	<insert id="insert" parameterType="com.attiot.railAnaly.metro.entity.ToolsRelation">
		INSERT INTO a_metro_tools_relation
		(
			id,
			<include refid="column" />
		) VALUES (
			#{id,jdbcType=VARCHAR},
			#{create_name,jdbcType=VARCHAR},
		    #{create_by,jdbcType=VARCHAR},
			#{create_date,jdbcType=TIMESTAMP},
			#{update_name,jdbcType=VARCHAR},
		    #{update_by,jdbcType=VARCHAR},
			#{update_date,jdbcType=TIMESTAMP},
		    #{sys_org_code,jdbcType=VARCHAR},
		    #{sys_company_code,jdbcType=VARCHAR},
		    #{bpm_status,jdbcType=VARCHAR},
		    #{tools_type,jdbcType=VARCHAR},
		    #{storage_location,jdbcType=VARCHAR},
		    #{location_code,jdbcType=INTEGER},
		    #{status,jdbcType=TIMESTAMP},
		    #{update_userid,jdbcType=TIMESTAMP},
		)
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			SELECT REPLACE(UUID(),'-','')
		</selectKey>
	</insert>

	<update id="update" parameterType="com.attiot.railAnaly.metro.entity.ToolsRelation">
		UPDATE a_metro_tools_relation
		SET
			`create_name` = #{createName},
			`create_by` = #{createBy},
			`create_date` = #{createDate},
			`update_name` = #{updateName},
			`update_by` = #{updateBy},
			`update_date` = #{updateDate},
			`sys_org_code` = #{sysOrgCode},
			`sys_company_code` = #{sysCompanyCode},
			`bpm_status` = #{bpmStatus},
			`tools_type` = #{toolsType},
			`storage_location` = #{storageLocation},
			`location_code` = #{locationCode},
			`status` = #{status},
			`update_userid` = #{updateUserid}
		WHERE ID = #{id}
	</update>

	<delete id="delete" parameterType="String">
		DELETE FROM a_metro_job WHERE ID = #{id}
	</delete>

	<select id="getById" parameterType="String" resultMap="ToolsRelation">
		SELECT
			ID,
		    create_name,
		    create_by,
		    create_date,
		    update_name,
		    update_by,
		    update_date,
		    sys_org_code,
		    sys_company_code,
		    bpm_status,
		    tools_type,
		    storage_location,
		    location_code,
		    status,
		    update_userid
		FROM a_metro_tools_relation
		<where>
			ID = #{id}
		</where>
	</select>
	<select id="getGroupyByToolsType" parameterType="String" resultType="map">
		SELECT
		tools_type,
		( SELECT  typename FROM t_s_type t where t.typecode =tools_type
        and t.typegroupid in(select id from t_s_typegroup tg where tg.typegroupcode='toolsType')) as tools_type_text
		FROM a_metro_tools_relation
        group by tools_type,tools_type_text
	</select>
	<select id="getByToolsType" parameterType="String" resultMap="ToolsRelation">
		SELECT
		 ID,
		create_name,
		create_by,
		create_date,
		update_name,
		update_by,
		update_date,
		sys_org_code,
		sys_company_code,
		bpm_status,
		tools_type,
		storage_location,
		location_code,
		status,
		update_userid,
		( SELECT  typename FROM t_s_type t where t.typecode =tools_type
		and t.typegroupid in(select id from t_s_typegroup tg where tg.typegroupcode='toolsType')) as tools_type_text,
		( SELECT  typename FROM t_s_type t where t.typecode =storage_location
		and t.typegroupid in(select id from t_s_typegroup tg where tg.typegroupcode='toLocation')) as storage_location_text,
		( SELECT  typename FROM t_s_type t where t.typecode =status
		and t.typegroupid in(select id from t_s_typegroup tg where tg.typegroupcode='relStatus')) as status_text
		FROM a_metro_tools_relation
		<where>
			tools_type = #{toolsType}
		</where>
	</select>

	<select id="getByParam" parameterType="com.attiot.railAnaly.metro.param.ToolsRelationQueryParam" resultMap="ToolsRelation">
		SELECT ID,
		<include refid="column" />
		FROM a_metro_tools_relation
		<include refid="where" />
		LIMIT 1
	</select>

	<select id="query" parameterType="com.attiot.railAnaly.metro.param.ToolsRelationQueryParam"	resultMap="ToolsRelation">
		SELECT
			ID,
			<include refid="column" />
		FROM a_metro_tools_relation
		<include refid="where" />
		<include refid="basic" />
	</select>

	<select id="queryCount" parameterType="com.attiot.railAnaly.metro.param.ToolsRelationQueryParam" resultType="Long">
		SELECT COUNT(0)
		FROM a_metro_tools_relation
		<include refid="where" />
	</select>

	<sql id="column">
		`create_name`,
		`create_by`,
		`create_date`,
		`update_name`,
		`update_by`,
		`update_date`,
		`sys_org_code`,
		`sys_company_cod',
		`bpm_status`,
		`tools_type`,
		`storage_locatio',
		`location_code`,
		`status`,
		`update_userid`
	</sql>

	<sql id="columnTable">
		a_metro_tools_relation.`create_name`,
		a_metro_tools_relation.`create_by`,
		a_metro_tools_relation.`create_date`,
		a_metro_tools_relation.`update_name`,
		a_metro_tools_relation.`update_by`,
		a_metro_tools_relation.`update_date`,
		a_metro_tools_relation.`sys_org_code`,
		a_metro_tools_relation.`sys_company_cod',
		a_metro_tools_relation.`bpm_status`,
		a_metro_tools_relation.`tools_type`,
		a_metro_tools_relation.`storage_locatio',
		a_metro_tools_relation.`location_code`,
		a_metro_tools_relation.`status`,
		a_metro_tools_relation.`update_userid`
	</sql>

	<sql id="where">
		<where>
			<if test="id != null"> AND id = #{id}</if>
			<if test="createName != null"> AND create_name = #{createName}</if>
			<if test="createBy != null"> AND create_by = #{createBy}</if>
			<if test="createDate != null"> AND create_date = #{createDate}</if>
			<if test="updateName != null"> AND update_name = #{updateName}</if>
			<if test="updateBy != null"> AND update_by = #{updateBy}</if>
			<if test="updateDate != null"> AND update_date = #{updateDate}</if>
			<if test="sysOrgCode != null"> AND sys_org_code = #{sysOrgCode}</if>
			<if test="sysCompanyCode != null"> AND sys_company_cod = #{sysCompanyCode}</if>
			<if test="bpmStatus != null"> AND bpm_status = #{bpmStatus}</if>
			<if test="toolsType != null"> AND tools_type = #{toolsType}</if>
			<if test="storageLocation != null"> AND storage_locatio = #{storageLocation}</if>
			<if test="locationCode != null"> AND location_code = #{locationCode}</if>
			<if test="status != null"> AND status = #{status}</if>
			<if test="updateUserid != null"> AND update_userid = #{updateUserid}</if>
		</where>
	</sql>

	<sql id="basic">
		<if test="column != null">ORDER BY #{column} #{sort}</if>
		<if test="pageNo != -1">LIMIT #{startIndex}, #{pageSize}</if>
		<if test="pageNo == -1 and limit != -1">LIMIT #{limit}</if>
		<if test="lock">
			<if test="lockMode == 0">FOR UPDATE</if>
			<if test="lockMode == 1">LOCK IN SHARE MODE</if>
		</if>
	</sql>
</mapper>
