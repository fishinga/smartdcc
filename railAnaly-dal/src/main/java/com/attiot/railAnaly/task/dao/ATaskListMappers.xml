<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.task.dao.ATaskListDao">
    <resultMap id="ATaskList" type="com.attiot.railAnaly.task.entity.ATaskList">
        <id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
        <result property="trainNo" column="train_no" javaType="String" jdbcType="VARCHAR"/>
        <result property="trainUnit" column="train_unit" javaType="String" jdbcType="VARCHAR"/>
        <result property="taskLibId" column="task_lib_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="jobId" column="job_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="taskSource" column="task_source" javaType="Integer" jdbcType="INTEGER"/>
        <result property="teamDepartId" column="team_depart_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="ppointId" column="ppoint_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="taskName" column="task_name" javaType="String" jdbcType="VARCHAR"/>
        <result property="workState" column="work_state" javaType="Integer" jdbcType="INTEGER"/>
        <result property="workDate" column="work_date" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="isFlow" column="is_flow" javaType="Integer" jdbcType="INTEGER"/>
        <result property="scheOperators" column="sche_operators" javaType="String" jdbcType="VARCHAR"/>
        <result property="flowOperators" column="flow_operators" javaType="String" jdbcType="VARCHAR"/>
        <result property="actualOperators" column="actual_operators" javaType="String" jdbcType="VARCHAR"/>
        <result property="startJob" column="start_job" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="finishJob" column="finish_job" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="taskHours" column="task_hours" javaType="Float" jdbcType="DECIMAL"/>
        <result property="coeDiff" column="coe_diff" javaType="Float" jdbcType="DECIMAL"/>
        <result property="coeOvertime" column="coe_overtime" javaType="Float" jdbcType="DECIMAL"/>
        <result property="coeCooperation" column="coe_cooperation" javaType="Float" jdbcType="DECIMAL"/>
        <result property="remarks" column="remarks" javaType="String" jdbcType="VARCHAR"/>
        <result property="assignTime" column="assign_time" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="creator" column="creator" javaType="String" jdbcType="VARCHAR"/>
        <result property="createtime" column="createtime" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="modifor" column="modifor" javaType="String" jdbcType="VARCHAR"/>
        <result property="modifytime" column="modifytime" javaType="Date" jdbcType="TIMESTAMP"/>
        <result property="preTransferSource" column="pre_transfer_source" javaType="Integer" jdbcType="INTEGER"/>
        <result property="sourceNum" column="source_num" javaType="String" jdbcType="VARCHAR"/>
        <result property="mutualOperations" column="mutual_operations" javaType="String" jdbcType="VARCHAR"/>
        <result property="speOperations" column="spe_operations" javaType="String" jdbcType="VARCHAR"/>
        <result property="parentTaskId" column="parent_task_id" javaType="String" jdbcType="VARCHAR"/>
        <result property="surplusValue" column="surplus_value"  javaType="float" jdbcType="DECIMAL"/>
        <result property="finishValue" column="finish_value"  javaType="float" jdbcType="DECIMAL"/>
        <result property="auditType" column="audit_type"  javaType="String" jdbcType="INTEGER"/>
    </resultMap>

    <select id="query" parameterType="com.attiot.railAnaly.task.param.ATaskListQueryParam" resultMap="ATaskList">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_list
        <include refid="where"/>
        <include refid="basic"/>
    </select>

    <select id="queryTaskList" parameterType="com.attiot.railAnaly.task.param.ATaskListQueryParam" resultType="Map">
        SELECT id,job_id,task_name,work_state,train_no,task_source,audit_type,DATE_FORMAT(createtime, '%m-%d %H:%i') as createtime ,modifytime,DATE_FORMAT(assign_time, '%m-%d %H:%i') as assign_time,IFNULL(remarks,'') as remarks,
        (SELECT count(reform_id) from a_task_reform_columns  where a_task_list.job_id = reform_id and (a_task_list.task_source = '2' or a_task_list.pre_transfer_source = '2' ) ) count,sche_operators as scheOperators
        FROM a_task_list
        <include refid="where"/>
        ORDER BY work_state ASC ,work_date DESC
    </select>

    <select id="getATaskListByWorkDateAndTaskSource" parameterType="Map" resultMap="ATaskList">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_list
        where
        <![CDATA[  date_format(work_date,'%Y-%m-%d') <= #{workdate}  ]]>
        and task_source=#{taskSource}
        and find_in_set(work_state,#{workState})>0
    </select>

    <select id="getMyUnfinishTaskList" parameterType="Map" resultMap="ATaskList">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_list
        where
        find_in_set(#{userId},sche_operators)>0
        and find_in_set(task_source,#{taskSources})>0
        and find_in_set(work_state,#{workState})>0
    </select>

    <select id="getTaskJob" parameterType="String" resultType="Map">
        SELECT
            tl.id id,
            IFNULL(tl.task_name,"") taskName,
            IFNULL(tl.task_hours,"") taskHours,
            IFNULL(tl.coe_diff,"") coeDiff,
            IFNULL(tl.coe_overtime,"") coeOvertime,
            IFNULL(tl.coe_cooperation ,"") coeCooperation,
            IFNULL(tl.remarks ,"") taskRemark,
            IFNULL(tj.attache_path, "") attachePath,
        IFNULL(tj.contents, "") contents
        FROM
            a_task_list tl
      LEFT JOIN a_task_job tj ON tl.job_id = tj.id
        <where>
            tl.id = #{id}
        </where>
    </select>

    <select id="getByIds" parameterType="String"  resultMap="ATaskList">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_list
        <where>
            find_in_set(ID, #{ids})>0
        </where>
    </select>

    <update id="updateParentTaskId" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";" >
            UPDATE a_task_list
            SET
            parent_task_id = #{item.parentTaskId},
            `modifor` = #{item.modifor},
            `modifytime` = now()
            WHERE id=#{item.id}
        </foreach>
    </update>

    <delete id="delete" parameterType="String">
        DELETE FROM a_task_list WHERE ID = #{id}
    </delete>

    <update id="update" parameterType="com.attiot.railAnaly.task.entity.ATaskList">
        UPDATE a_task_list
        SET
        `train_no` = #{trainNo},
        `train_unit` = #{trainUnit},
        `task_lib_id` = #{taskLibId},
        job_id = #{jobId},
        parent_job_id=#{parentJobId},
        parent_job_name =#{parentJobName},
        `task_source` = #{taskSource},
        `team_depart_id` = #{teamDepartId},
        ppoint_id = #{ppointId},
        `task_name` = #{taskName},
        `work_state` = #{workState},
        `work_date` = #{workDate},
        `is_flow` = #{isFlow},
        `sche_operators` = #{scheOperators},
        `flow_operators` = #{flowOperators},
        `actual_operators` = #{actualOperators},
        `start_job` = #{startJob},
        `finish_job` = #{finishJob},
        `task_hours` = #{taskHours},
        `coe_diff` = #{coeDiff},
        `coe_overtime` = #{coeOvertime},
        `coe_cooperation` = #{coeCooperation},
         assign_time = #{assignTime},
        `remarks` = #{remarks},
         mutual_operations =#{mutualOperations},
        spe_operations = #{speOperations},
        `modifor` = #{modifor},
        `modifytime` = now(),
        `pre_transfer_source` = #{preTransferSource},
        parent_task_id = #{parentTaskId},
    surplus_value = #{surplusValue},
    finish_value = #{finishValue}
        WHERE ID = #{id}
    </update>


    <insert id="insertHisList" parameterType="Map">
        INSERT INTO a_task_list_his
        (id,<include refid="column"/>)
        select
        id,
        `train_no`,
        `train_unit`,
        `task_lib_id`,
        `job_id`,
        parent_job_id,
        parent_job_name,
        `task_source`,
        `team_depart_id`,
        `ppoint_id`,
        `task_name`,
        2,
        `work_date`,
        `is_flow`,
        `sche_operators`,
        `flow_operators`,
        `actual_operators`,
        `start_job`,
        `finish_job`,
        `task_hours`,
        `coe_diff`,
        `coe_overtime`,
        `coe_cooperation`,
        `remarks`,
        assign_time,
        #{userId},
        `createtime`,
        #{userId},
        `modifytime`,
        pre_transfer_source,
        mutual_operations,
        spe_operations,
        parent_task_id,
        surplus_value,
        finish_value
        from a_task_list where find_in_set(id,#{ids})>0
    </insert>

    <insert id="insert" parameterType="com.attiot.railAnaly.task.entity.ATaskList">
        INSERT INTO a_task_list
                (id,
                `train_no`,
                `train_unit`,
                `task_lib_id`,
                source_num,
                job_id,
                parent_job_id,
                parent_job_name,
                audit_type,
                `task_source`,
                pre_transfer_source,
                `team_depart_id`,
                 ppoint_id,
                `task_name`,
                `work_state`,
                `work_date`,
                `is_flow`,
                `sche_operators`,
                `flow_operators`,
                `actual_operators`,
                `start_job`,
                `finish_job`,
                `task_hours`,
                `coe_diff`,
                `coe_overtime`,
                `coe_cooperation`,
                `remarks`,
                 assign_time,
                `creator`,
                `createtime`,
                `modifor`,
                `modifytime`,
        mutual_operations,
        spe_operations,
        parent_task_id,
        surplus_value,
        finish_Value
        )
        VALUES (
            #{id},
            #{trainNo,jdbcType=VARCHAR},
            #{trainUnit,jdbcType=VARCHAR},
            #{taskLibId,jdbcType=VARCHAR},
            #{sourceNum},
            #{jobId},
            #{parentJobId},
            #{parentJobName},
            #{auditType},
            #{taskSource,jdbcType=INTEGER},
            #{preTransferSource},
            #{teamDepartId,jdbcType=VARCHAR},
            #{ppointId,jdbcType=VARCHAR},
            #{taskName,jdbcType=VARCHAR},
            #{workState,jdbcType=INTEGER},
            #{workDate,jdbcType=TIMESTAMP},
            #{isFlow,jdbcType=INTEGER},
            #{scheOperators,jdbcType=VARCHAR},
            #{flowOperators,jdbcType=VARCHAR},
            #{actualOperators,jdbcType=VARCHAR},
            #{startJob,jdbcType=TIMESTAMP},
            #{finishJob,jdbcType=TIMESTAMP},
            #{taskHours,jdbcType=DECIMAL},
            #{coeDiff,jdbcType=DECIMAL},
            #{coeOvertime,jdbcType=DECIMAL},
            #{coeCooperation,jdbcType=DECIMAL},
            #{remarks},
            #{assignTime},
            #{creator,jdbcType=VARCHAR},
            now(),
            #{modifor,jdbcType=VARCHAR},
        now(),
        #{mutualOperations},
        #{speOperations},
        #{parentTaskId},
        #{surplusValue},
        #{finishValue}
        )
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
          SELECT REPLACE(UUID(),'-','')
        </selectKey>

    </insert>


    <select id="getTaskRefrom" parameterType="String" resultType="Map">
        SELECT
            tl.id id,
            IFNULL(tl.task_name,"") taskName,
            IFNULL(tl.task_hours,"") taskHours,
            IFNULL(tl.coe_diff,"") coeDiff,
            IFNULL(tl.coe_overtime,"") coeOvertime,
            IFNULL(tl.coe_cooperation ,"") coeCooperation,
            IFNULL(tl.remarks ,"") taskRemark,
            IFNULL(tr.attache_path,"") attachePath,
        IFNULL(tr.contents, "") contents
        FROM
          a_task_list tl
        LEFT JOIN a_task_reform tr ON tl.job_id = tr.id
        <where>
            tl.id = #{id}
        </where>
    </select>

    <select id="getTaskTemp" parameterType="String" resultType="Map">
        SELECT
            tl.id id,
            IFNULL(tl.task_name,"") taskName,
            IFNULL(tl.task_hours,"") taskHours,
            IFNULL(tl.coe_diff,"") coeDiff,
            IFNULL(tl.coe_overtime,"") coeOvertime,
            IFNULL(tl.coe_cooperation ,"") coeCooperation,
            IFNULL(tl.remarks ,"") taskRemark,
            IFNULL(tt.attache_path,"") attachePath,
            IFNULL(tt.contents, "") contents
        FROM
            a_task_list tl
        LEFT JOIN a_task_temp tt ON tl.job_id = tt.id
        <where>
            tl.id = #{id}
        </where>
    </select>

    <select id="getById" parameterType="String"  resultMap="ATaskList">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_list
        <where>
            ID = #{id}
        </where>
        UNION
        SELECT ID,
        <include refid="column"/>
        FROM a_task_list_his
        <where>
            ID = #{id}
        </where>
    </select>

    <select id="queryCount" parameterType="com.attiot.railAnaly.task.param.ATaskListQueryParam" resultType="Long">
        SELECT COUNT(0)
        FROM a_task_list
        <include refid="where"/>
    </select>

    <select id="getUnfinishTaskCountByUserId" parameterType="String" resultType="Long">
        SELECT COUNT(0)
        FROM a_task_list
        where
        find_in_set(#{userId},sche_operators)>0 and work_state not in(3,4)
    </select>


    <!-- 查询需要完成的任务 begin  -->
    <select id="getNeedTask" parameterType="String" resultType="java.util.Map">
        SELECT
            t.id,
            t.task_name,
            t.train_no,
            t.work_state,
            t.work_date,
            t.task_source,
            t.audit_type
        FROM
            a_task_list t
        WHERE
            t.work_state in ( '1','2')
        and IFNULL(t.train_no,'') <![CDATA[ <> ]]> ''
        AND FIND_IN_SET(#{userId},sche_operators) >0
    </select>
    <!-- 查询需要完成的任务 end   -->

    <!--  根据多个ID，查询任务信息  begin -->
    <select id="getTaskByIds"  resultMap="ATaskList">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_list
        WHERE
        ID in
        <foreach collection="array" item="id" index="index"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>
    <!--  根据多个ID，查询任务信息  end -->

    <!--  修改任务的请点ID begin -->
    <update id="editTaskPoint" >
        UPDATE a_task_list
        SET
        `ppoint_id` = CONCAT(IFNULL(ppoint_id , ''), ',',#{pointId})
        WHERE ID in
        <foreach collection="ids" item="item" index="index"
                 open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>
    <!--  修改任务的请点ID end  -->

    <!--  根据请点ID和当前状态更新任务状态 begin -->
    <update id="editTaskWorkState" >
        UPDATE a_task_list
        SET work_state = #{newWorkState},
        start_job = now()
        WHERE find_in_set(#{pointId},ppoint_id)>0
        AND  work_state = #{curWorkState}
    </update>
    <!--  根据请点ID和当前状态更新任务状态 end  -->


    <!-- ***********  根据任务ID和请点类型判断是否有请点过的任务  begin ************-->
    <select id="checkTaskRequested"   resultMap="ATaskList">
        SELECT
        tl.*
        FROM
        a_point_please pp,
        a_task_list tl
        WHERE
        FIND_IN_SET(tl.id, #{taskIds}) > 0
        AND FIND_IN_SET(pp.id, tl.ppoint_id) >0
        and pp.point_type = #{pointType}
    </select>
    <!-- ***********  根据任务ID和请点类型判断是否有请点过的任务  end ************-->

    <!-- **** 根据请点ID，查询任务信息  begin *** -->
    <select id="getTaskByPointId" parameterType="String" resultMap="ATaskList">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_list
        WHERE  find_in_set(#{pointId},ppoint_id)>0
    </select>

    <!--获取当前登录用户的清点车-->
    <select id="pointCar" parameterType="String" resultType="Map">
         SELECT DISTINCT t1.id
             , t1.train_no trainNo
        FROM
          a_point_list t1, a_point_list t2
        WHERE
          t1.id = t2.parent_id
          AND t2.ppoint_creator = #{userId}
    </select>

    <!-- **** 根据请点ID，查询任务信息  end  *** -->
    <update id="startJob" parameterType="Map">
        UPDATE a_task_list
        SET
        work_state = 2,
        start_job = now(),
        `modifor` = #{userId},
        `modifytime` = now()
        WHERE find_in_set(ID, #{ids})>0
    </update>

    <update id="finishJob" parameterType="Map">
        UPDATE a_task_list
        SET
        <if test="workState != null ">work_state = #{workState},</if>
        <if test="surplusValue != null ">surplus_value = #{surplusValue},</if>
        <if test="remarks != null ">remarks = #{remarks},</if>
        <if test="finishJob != null ">finish_job = now(),</if>
        <if test="mutualers != null ">mutual_operations = #{mutualers},</if>
        <if test="spetials != null ">spe_operations = #{spetials},</if>


        `modifor` = #{userId},
        `modifytime` = now()
        WHERE find_in_set(ID, #{ids})>0
    </update>

    <update id="updateWorkStateAndRemarks" parameterType="Map">
        UPDATE a_task_list
        SET
        work_state = #{workState},
        remarks = #{remarks},
        finish_job = now(),
        `modifor` = #{userId},
        `modifytime` = now()
        WHERE find_in_set(ID, #{ids})>0
    </update>
	<select id="getByParentTaskId" parameterType="String"  resultMap="ATaskList">
        SELECT ID,
        <include refid="column"/>
        FROM a_task_list
        where   parent_task_id = #{parentTaskId} 
        order by createtime
    </select>
    <sql id="column">
        `train_no`,
        `train_unit`,
        `task_lib_id`,
        `job_id`,
        `task_source`,
        `team_depart_id`,
        `audit_type`,
        `task_name`,
        `work_state`,
        `work_date`,
        `is_flow`,
        `sche_operators`,
        `flow_operators`,
        `actual_operators`,
        `start_job`,
        `finish_job`,
        `task_hours`,
        `coe_diff`,
        `coe_overtime`,
        `coe_cooperation`,
        `remarks`,
        assign_time,
        `creator`,
        `createtime`,
        `modifor`,
        `modifytime`,
        `pre_transfer_source`,
        source_num,
        mutual_operations,
        spe_operations,
        parent_task_id,
  	surplus_value,
  	finish_value
    </sql>

    <sql id="columnTable">
        a_task_list.`train_no`,
        a_task_list.`train_unit`,
        a_task_list.`task_lib_id`,
        a_task_list.`job_id`,
        a_task_list.`task_source`,
        a_task_list.`team_depart_id`,
        a_task_list.`task_name`,
        a_task_list.`work_state`,
        a_task_list.`work_date`,
        a_task_list.`is_flow`,
        a_task_list.`sche_operators`,
        a_task_list.`flow_operators`,
        a_task_list.`actual_operators`,
        a_task_list.`start_job`,
        a_task_list.`finish_job`,
        a_task_list.`task_hours`,
        a_task_list.`coe_diff`,
        a_task_list.`coe_overtime`,
        a_task_list.`coe_cooperation`,
        a_task_list.`remarks`,
        a_task_list.`creator`,
        a_task_list.`createtime`,
        a_task_list.`modifor`,
        a_task_list.`modifytime`
    </sql>

    <sql id="where">
        <where>
            <if test="id != null"> AND id = #{id}</if>
            <if test="trainNo != null"> AND train_no = #{trainNo}</if>
            <if test="trainUnit != null"> AND train_unit = #{trainUnit}</if>
            <if test="taskLibId != null"> AND task_lib_id = #{taskLibId}</if>
            <if test="taskSource != null"> AND task_source = #{taskSource}</if>
            <if test="teamDepartId != null and teamDepartId != ''">
                AND find_in_set(#{teamDepartId},team_depart_id )>0
            </if>
            <if test="taskName != null"> AND task_name = #{taskName}</if>
            <if test="workState != null and workState != ''"> AND work_state = #{workState}</if>
            <if test="workDate != null"> AND work_date = #{workDate}</if>
            <if test="isFlow != null"> AND is_flow = #{isFlow}</if>
            <if test="scheOperators != null and scheOperators != ''">
                AND find_in_set( #{scheOperators},sche_operators)>0
            </if>
            <if test="flowOperators != null"> AND flow_operators = #{flowOperators}</if>
            <if test="actualOperators != null"> AND actual_operators = #{actualOperators}</if>
            <if test="startJob != null"> AND start_job = #{startJob}</if>
            <if test="finishJob != null"> AND finish_job = #{finishJob}</if>
            <if test="taskHours != null"> AND task_hours = #{taskHours}</if>
            <if test="coeDiff != null"> AND coe_diff = #{coeDiff}</if>
            <if test="coeOvertime != null"> AND coe_overtime = #{coeOvertime}</if>
            <if test="coeCooperation != null"> AND coe_cooperation = #{coeCooperation}</if>
            <if test="remarks != null"> AND remarks = #{remarks}</if>
            <if test="creator != null"> AND creator = #{creator}</if>
            <if test="createtime != null"> AND createtime = #{createtime}</if>
            <if test="modifor != null"> AND modifor = #{modifor}</if>
            <if test="modifytime != null"> AND modifytime = #{modifytime}</if>
            <!--<if test="orgList != null" > AND team_depart_id in
                <foreach item="item" index="index" collection="orgList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>-->
        </where>
    </sql>

    <sql id="basic">
        <if test="column != null">
            ORDER BY #{column} #{sort}
        </if>
        <if test="pageNo != -1">
            LIMIT #{startIndex},#{pageSize}
        </if>
        <if test="pageNo == -1 and limit != -1">
            LIMIT #{limit}
        </if>
        <if test="lock">
            <if test="lockMode == 0">
                FOR UPDATE
            </if>
            <if test="lockMode == 1">
                LOCK IN SHARE MODE
            </if>
        </if>
    </sql>
</mapper>
