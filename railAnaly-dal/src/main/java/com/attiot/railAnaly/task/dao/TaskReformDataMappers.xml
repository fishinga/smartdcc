<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.task.dao.TaskReformDataDao">
	<resultMap id="TaskReformData" type="com.attiot.railAnaly.task.entity.TaskReformData">
		<id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
		<result property="reformNum" column="reform_num" javaType="String" jdbcType="VARCHAR"/>
		<result property="taskListId" column="task_list_id" javaType="String" jdbcType="VARCHAR"/>
		<result property="trainNo" column="train_no" javaType="String" jdbcType="VARCHAR"/>
		<result property="colId" column="col_id" javaType="String" jdbcType="VARCHAR"/>
		<result property="colSort" column="col_sort" javaType="Integer" jdbcType="INTEGER"/>
		<result property="colCode" column="col_code" javaType="String" jdbcType="VARCHAR"/>
		<result property="colName" column="col_name" javaType="String" jdbcType="VARCHAR"/>
		<result property="colValue" column="col_value" javaType="String" jdbcType="VARCHAR"/>
		<result property="reformId" column="reform_id" javaType="String" jdbcType="VARCHAR"/>

	</resultMap>
	
	<insert id="insert" parameterType="com.attiot.railAnaly.task.entity.TaskReformData">
		INSERT INTO a_task_reform_data
		(
			id,
			<include refid="column" />
		) VALUES (
			#{id,jdbcType=VARCHAR},
			#{reformNum,jdbcType=VARCHAR},
			#{taskListId,jdbcType=VARCHAR},
			#{trainNo,jdbcType=VARCHAR},
			#{colId,jdbcType=VARCHAR},
			#{colSort,jdbcType=INTEGER},
			#{colCode,jdbcType=VARCHAR},
			#{colName,jdbcType=VARCHAR},
			#{colValue,jdbcType=VARCHAR},
			#{reformId,jdbcType=VARCHAR}
		)
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			SELECT REPLACE(UUID(),'-','')
		</selectKey>
	</insert>


	<insert id="batchInsert" parameterType="java.util.List">
		INSERT INTO a_task_reform_data
		(id,<include refid="column"/>)
		values
		<foreach collection="list" item="item" index="index" separator="," >
			(
			md5(uuid()),
			#{item.reformNum,jdbcType=VARCHAR},
			#{item.taskListId,jdbcType=VARCHAR},
			#{item.trainNo,jdbcType=VARCHAR},
			#{item.colId,jdbcType=VARCHAR},
			#{item.colSort,jdbcType=INTEGER},
			#{item.colCode,jdbcType=VARCHAR},
			#{item.colName,jdbcType=VARCHAR},
			#{item.colValue,jdbcType=VARCHAR},
			#{item.reformId,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>

	<update id="update" parameterType="com.attiot.railAnaly.task.entity.TaskReformData">
		UPDATE a_task_reform_data
		SET
			`reform_num` = #{reformNum},
			`task_list_id` = #{taskListId},
			`train_no` = #{trainNo},
			`col_id` = #{colId},
			`col_sort` = #{colSort},
			`col_code` = #{colCode},
			`col_name` = #{colName},
			`col_value` = #{colValue}
		WHERE ID = #{id}
	</update>

	<delete id="delete" parameterType="String">
		DELETE FROM a_task_reform_data WHERE ID = #{id}
	</delete>

	<select id="getById" parameterType="String" resultMap="TaskReformData">
		SELECT
			ID,
			<include refid="column" />
		FROM a_task_reform_data
		<where>
			ID = #{id}
		</where>
	</select>

	<select id="getByParam" parameterType="com.attiot.railAnaly.task.param.TaskReformDataQueryParam" resultMap="TaskReformData">
		SELECT ID,
		<include refid="column" />
		FROM a_task_reform_data
		<include refid="where" />
		LIMIT 1
	</select>

	<select id="query" parameterType="com.attiot.railAnaly.task.param.TaskReformDataQueryParam"	resultMap="TaskReformData">
		SELECT
			ID,
			<include refid="column" />
		FROM a_task_reform_data
		<include refid="where" />
		<include refid="basic" />
	</select>

	<select id="queryCount" parameterType="com.attiot.railAnaly.task.param.TaskReformDataQueryParam" resultType="Long">
		SELECT COUNT(0)
		FROM a_task_reform_data
		<include refid="where" />
	</select>

	<sql id="column">
		`reform_num`,
		`task_list_id`,
		`train_no`,
		`col_id`,
		`col_sort`,
		`col_code`,
		`col_name`,
		`col_value`,
		`reform_id`
	</sql>

	<sql id="columnTable">
		a_task_reform_data.`reform_num`,
		a_task_reform_data.`task_list_id`,
		a_task_reform_data.`train_no`,
		a_task_reform_data.`col_id`,
		a_task_reform_data.`col_sort`,
		a_task_reform_data.`col_code`,
		a_task_reform_data.`col_name`,
		a_task_reform_data.`col_value`
	</sql>

	<sql id="where">
		<where>
			<if test="id != null"> AND id = #{id}</if>
			<if test="reformNum != null"> AND reform_num = #{reformNum}</if>
			<if test="taskListId != null"> AND task_list_id = #{taskListId}</if>
			<if test="trainNo != null"> AND train_no = #{trainNo}</if>
			<if test="colId != null"> AND col_id = #{colId}</if>
			<if test="colSort != null"> AND col_sort = #{colSort}</if>
			<if test="colCode != null"> AND col_code = #{colCode}</if>
			<if test="colName != null"> AND col_name = #{colName}</if>
			<if test="colValue != null"> AND col_value = #{colValue}</if>
		</where>
	</sql>

	<sql id="basic">
		<if test="column != null">ORDER BY #{column} #{sort}</if>
		<if test="pageNo != -1">LIMIT #{startIndex}, #{pageSize}</if>
		<if test="pageNo == -1 and limit != -1">LIMIT #{limit}</if>
		<if test="lock">
			<if test="lockMode == 0">FOR UPDATE</if>
			<if test="lockMode == 1">LOCK IN SHARE MODE</if>
		</if>
	</sql>
</mapper>
