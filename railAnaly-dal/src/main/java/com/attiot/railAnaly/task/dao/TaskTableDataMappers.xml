<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.attiot.railAnaly.task.dao.TaskTableDataDao">
	<resultMap id="TaskTableData" type="com.attiot.railAnaly.task.entity.TaskTableData">
		<id property="id" column="id" javaType="String" jdbcType="VARCHAR"/>
		<result property="ppointId" column="ppoint_id" javaType="String" jdbcType="VARCHAR"/>
		<result property="taskTableId" column="task_table_id" javaType="String" jdbcType="VARCHAR"/>
		<result property="colId" column="col_id" javaType="String" jdbcType="VARCHAR"/>
		<result property="colCode" column="col_code" javaType="String" jdbcType="VARCHAR"/>
		<result property="colName" column="col_name" javaType="String" jdbcType="VARCHAR"/>
		<result property="colValue" column="col_value" javaType="String" jdbcType="VARCHAR"/>
		<result property="colItems" column="col_Items" javaType="String" jdbcType="VARCHAR"/>

	</resultMap>
	
	<insert id="insert" parameterType="com.attiot.railAnaly.task.entity.TaskTableData">
		INSERT INTO a_task_table_data
		(
			id,
			<include refid="column" />
		) VALUES (
			#{id,jdbcType=VARCHAR},
			#{ppointId,jdbcType=VARCHAR},
			#{taskTableId,jdbcType=VARCHAR},
			#{colId,jdbcType=VARCHAR},
			#{colCode,jdbcType=VARCHAR},
			#{colName,jdbcType=VARCHAR},
			#{colValue,jdbcType=VARCHAR},
			#{colItems,jdbcType=VARCHAR}
		)
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			SELECT REPLACE(UUID(),'-','')
		</selectKey>
	</insert>


	<insert id="batchInsert" parameterType="java.util.List">
		INSERT INTO a_task_table_data
		(id,<include refid="column"/>)
		values
		<foreach collection="list" item="item" index="index" separator="," >
			(
			md5(uuid()),
			#{item.ppointId,jdbcType=VARCHAR},
			#{item.taskTableId,jdbcType=VARCHAR},
			#{item.colId,jdbcType=VARCHAR},
			#{item.colCode,jdbcType=VARCHAR},
			#{item.colName,jdbcType=VARCHAR},
			#{item.colValue,jdbcType=VARCHAR},
			#{item.colItems,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>

	<update id="update" parameterType="com.attiot.railAnaly.task.entity.TaskTableData">
		UPDATE a_task_table_data
		SET
			`ppoint_id` = #{ppointId},
			`task_table_id` = #{taskTableId},
			`col_id` = #{colId},
			`col_code` = #{colCode},
			`col_name` = #{colName},
			`col_value` = #{colValue},
			`col_Items` = #{colItems}
		WHERE ID = #{id}
	</update>

	<delete id="delete" parameterType="String">
		DELETE FROM a_task_table_data WHERE ID = #{id}
	</delete>

	<select id="getById" parameterType="String" resultMap="TaskTableData">
		SELECT
			ID,
			<include refid="column" />
		FROM a_task_table_data
		<where>
			ID = #{id}
		</where>
	</select>

	<select id="getByParam" parameterType="com.attiot.railAnaly.task.param.TaskTableDataQueryParam" resultMap="TaskTableData">
		SELECT ID,
		<include refid="column" />
		FROM a_task_table_data
		<include refid="where" />
		LIMIT 1
	</select>


	<!-- 根据poinID 和 code  查询 begin  -->
	<select id="getByPointIdCode"  resultMap="TaskTableData">
		SELECT *
		FROM a_task_table_data
		WHERE  ppoint_id = #{pointId}
		AND EXISTS (
		SELECT
		tt.id
		FROM
		a_task_table tt
		WHERE
		tt.id = task_table_id
		AND tt.tablecode = #{colCode}
		)
	</select>
	<!-- 根据poinID 和 code  查询 end  -->

	<select id="query" parameterType="com.attiot.railAnaly.task.param.TaskTableDataQueryParam"	resultMap="TaskTableData">
		SELECT
			ID,
			<include refid="column" />
		FROM a_task_table_data
		<include refid="where" />
		<include refid="basic" />
	</select>

	<select id="queryCount" parameterType="com.attiot.railAnaly.task.param.TaskTableDataQueryParam" resultType="Long">
		SELECT COUNT(0)
		FROM a_task_table_data
		<include refid="where" />
	</select>

	<sql id="column">
		`ppoint_id`,
		`task_table_id`,
		`col_id`,
		`col_code`,
		`col_name`,
		`col_value`,
		`col_Items`
	</sql>

	<sql id="columnTable">
		a_task_table_data.`ppoint_id`,
		a_task_table_data.`task_table_id`,
		a_task_table_data.`col_id`,
		a_task_table_data.`col_code`,
		a_task_table_data.`col_name`,
		a_task_table_data.`col_value`,
		a_task_table_data.`col_Items`
	</sql>

	<sql id="where">
		<where>
			<if test="id != null"> AND id = #{id}</if>
			<if test="ppointId != null"> AND ppoint_id = #{ppointId}</if>
			<if test="taskTableId != null"> AND task_table_id = #{taskTableId}</if>
			<if test="colId != null"> AND col_id = #{colId}</if>
			<if test="colCode != null"> AND col_code = #{colCode}</if>
			<if test="colName != null"> AND col_name = #{colName}</if>
			<if test="colValue != null"> AND col_value = #{colValue}</if>
			<if test="colItems != null"> AND col_Items = #{colItems}</if>
		</where>
	</sql>

	<sql id="basic">
		<if test="column != null">ORDER BY #{column} #{sort}</if>
		<if test="pageNo != -1">LIMIT #{startIndex}, #{pageSize}</if>
		<if test="pageNo == -1 and limit != -1">LIMIT #{limit}</if>
		<if test="lock">
			<if test="lockMode == 0">FOR UPDATE</if>
			<if test="lockMode == 1">LOCK IN SHARE MODE</if>
		</if>
	</sql>
</mapper>
